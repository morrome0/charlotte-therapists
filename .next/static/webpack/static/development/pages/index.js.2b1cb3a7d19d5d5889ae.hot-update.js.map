{"version":3,"file":"static/webpack/static/development/pages/index.js.2b1cb3a7d19d5d5889ae.hot-update.js","sources":["webpack:///./components/Map.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Marker from './Marker'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  },\n});\n\nconst Map = props => {\n  const classes = useStyles()\n  const [ map, setMap ] = useState({})\n  const [ markers, setMarkers ] = useState([])\n  const mapRef = useRef(null)\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: { lat: 35.2271, lng: -80.8431 },\n      zoom: 12\n    });\n    setMap(map)\n\n    const markers = []\n    props.therapists.forEach((therapist) => {\n      if (therapist.location) {\n        let marker = new google.maps.Marker({position: therapist.location , map: map})\n        markers.push({\"id\": therapist.id, \"object\": marker})\n      }\n    })\n    setMarkers(markers)\n  }\n\n  useEffect(() => {\n    initMap()\n    return () => {\n    }\n  }, [])\n\n\n\n  const changeSelectedMarker = () => {\n    if (props.selected) {\n      markers.forEach((marker) => marker.object.setAnimation(null))\n      markers.find((marker) => marker.id == props.selected).object.setAnimation(google.maps.Animation.BOUNCE)\n    }\n  }\n\n  useEffect(() => {\n    changeSelectedMarker()\n    return () => {\n    }\n  }, [props.selected])\n\n  return (\n    <div ref={mapRef} className={classes.root}>\n    </div>\n  )\n}\n\nexport default Map\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}