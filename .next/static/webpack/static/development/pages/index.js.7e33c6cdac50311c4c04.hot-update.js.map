{"version":3,"file":"static/webpack/static/development/pages/index.js.7e33c6cdac50311c4c04.hot-update.js","sources":["webpack:///./components/Listing.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Box from '@material-ui/core/Box'\nimport Divider from '@material-ui/core/Divider'\nimport Icon from '@material-ui/core/Icon'\nimport Grid from '@material-ui/core/Grid'\n\n\nconst Listing = props => {\n  const classes = useStyles()\n\n  function handleClick() {\n    props.setSelected(props.id)\n    if (!props.showMidbar)props.setShowMidbar(true)\n  }\n\n  return (\n    <div>\n      <ListItem className={classes.root} button selected={props.therapist.id == props.selected ? true : false } onClick={handleClick}>\n        <div className={classes.imageContainer}>\n          <CardMedia image={'/therapist-images/' + props.therapist.image} className={classes.listingImage} />\n        </div>\n        <ListItemText className={classes.contentContainer}>\n          <Box py={1} >\n            <Typography style={{fontSize:18}}>\n              {props.therapist.first_name} {props.therapist.last_name}\n            </Typography>\n            <Typography variant=\"h4\" className={classes.subtitle} color=\"textSecondary\">\n              {props.therapist.title}\n            </Typography>\n          </Box>\n\n          <Box pl={1}>\n            <Grid container>\n              <Grid item xs={5}>\n                <Typography variant=\"body2\" style={{display:\"inline-block\"}} color=\"textSecondary\">\n                  <Icon style={{fontSize: 14, verticalAlign:\"middle\"}}>school</Icon> {props.therapist.licenses.join(', ')}\n                </Typography>\n              </Grid>\n              <Grid item xs={7}>\n                <Typography variant=\"body2\" style={{display:\"inline-block\"}} color=\"textSecondary\">\n                  <Icon style={{fontSize: 14, verticalAlign:\"middle\"}}>group</Icon> {props.therapist.client_types.join(', ')}\n                </Typography>\n              </Grid>\n              <Grid item xs={5}>\n                <Typography variant=\"body2\" style={{display:\"inline-block\"}} color=\"textSecondary\">\n                  <span style={{fontSize: 14, fontWeight: 800}}>$</span> {props.therapist.price} per Session\n                </Typography>\n              </Grid>\n              <Grid item xs={7}>\n                <Typography variant=\"body2\" style={{display:\"inline-block\"}} color=\"textSecondary\">\n                  <Icon style={{fontSize: 14, verticalAlign:\"middle\"}}>work</Icon> {props.therapist.experience} years experience\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </ListItemText>\n      </ListItem>\n      <Divider />\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflow: 'hidden',\n  },\n  selected: {\n    background:'red',\n  },\n  subtitle: {\n    margin: 0,\n  },\n  imageContainer: {\n    [theme.breakpoints.only('xs')]: {\n      width: 110,\n      height:110,\n      padding: 10,\n    },\n    width: 125,\n    height: 125,\n    padding:18,\n    display:'inline-box',\n    verticalAlign: 'top',\n  },\n  contentContainer: {\n    width: 375,\n    height: 120,\n    display:'inline-box',\n    verticalAlign: 'top',\n    overflow:'hidden'\n  },\n  listingImage: {\n    width: '100%',\n    borderRadius:'50%',\n  },\n  chip: {\n    position:'absolute',\n    top:15,\n    right:15,\n  },\n\n}));\n\nexport default Listing\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAEA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAjCA;AAAA;AAyCA;;;;A","sourceRoot":""}