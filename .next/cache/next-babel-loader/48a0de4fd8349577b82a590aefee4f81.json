{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Head from 'next/head';\nimport getTherapists from \"../data\";\nimport Listings from '../components/Listings';\nimport Listing from '../components/Listing';\nimport NavBar from '../components/NavBar';\nimport LeftBar from '../components/LeftBar';\nimport Box from '@material-ui/core/Box';\nimport Map from '../components/Map';\nimport Midbar from '../components/Midbar';\nimport fetch from 'isomorphic-unfetch';\nvar useStyles = makeStyles({\n  main: {\n    display: \"flex\",\n    height: \"100vh\"\n  },\n  mapbox: {\n    flexgrow: 1\n  }\n});\n\nvar Home = function Home(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var _useState2 = useState(props.therapists[0]),\n      selectedTherapist = _useState2[0],\n      setSelectedTherapist = _useState2[1];\n\n  var _useState3 = useState(true),\n      showMidbar = _useState3[0],\n      setShowMidbar = _useState3[1];\n\n  var getSelectedTherapist = function getSelectedTherapist() {\n    return props.therapists.find(function (therapist) {\n      return therapist.id == selected;\n    });\n  };\n\n  useEffect(function () {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n    return function () {};\n  }, [selected]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Charlotte Therapists\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), \"// TO-DO move font loading to server side using custom _document.js\"), __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: classes.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(LeftBar, {\n    therapists: props.therapists,\n    selected: selected,\n    setSelected: setSelected,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(Midbar, {\n    therapist: selectedTherapist,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    display: {\n      xs: 'none',\n      sm: 'block'\n    },\n    style: {\n      flexGrow: '1'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 73\n    }\n  }))));\n};\n\nif (true) {\n  Home.getInitialProps = function _callee(ctx) {\n    var therapists;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            therapists = getTherapists();\n            console.log(therapists);\n            return _context.abrupt(\"return\", {\n              therapists: therapists\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n} else {\n  Home.getInitialProps = function _callee2(ctx) {\n    var res, therapists;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://charlotte-therapists-api.herokuapp.com/api/v1/therapists'));\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            therapists = _context2.sent;\n            console.log(therapists);\n            return _context2.abrupt(\"return\", {\n              therapists: therapists\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}\n\nexport default Home; // <Listings therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/pages/index.js"],"names":["useState","useEffect","makeStyles","Head","getTherapists","Listings","Listing","NavBar","LeftBar","Box","Map","Midbar","fetch","useStyles","main","display","height","mapbox","flexgrow","Home","props","classes","selected","setSelected","therapists","selectedTherapist","setSelectedTherapist","showMidbar","setShowMidbar","getSelectedTherapist","find","therapist","id","root","xs","sm","flexGrow","getInitialProps","ctx","console","log","res","json"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Head from 'next/head'\nimport getTherapists from \"../data\"\nimport Listings from '../components/Listings'\nimport Listing from '../components/Listing'\nimport NavBar from '../components/NavBar'\nimport LeftBar from '../components/LeftBar'\nimport Box from '@material-ui/core/Box'\nimport Map from '../components/Map'\nimport Midbar from '../components/Midbar'\nimport fetch from 'isomorphic-unfetch'\n\n\nconst useStyles = makeStyles({\n  main: {\n    display:\"flex\",\n    height:\"100vh\",\n\n  },\n  mapbox: {\n    flexgrow:1\n  }\n});\n\nconst Home = props => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[0])\n  const [showMidbar, setShowMidbar] = useState(true)\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n\n    return () => {\n\n    }\n  }, [selected])\n\n  return (\n    <div className={classes.root}>\n      <Head>\n        <title>Charlotte Therapists</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        // TO-DO move font loading to server side using custom _document.js\n      </Head>\n\n      <NavBar />\n\n      <Box className={classes.main}>\n        <LeftBar therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Box display={{xs: 'none', sm:'block'}} style={{flexGrow: '1'}}><Map therapists={props.therapists} selected= {selected}/></Box>\n      </Box>\n\n\n    </div>\n  )\n}\n\nif (process.env.NODE_ENV === \"development\") {\n  Home.getInitialProps = async (ctx) => {\n    const therapists = getTherapists()\n    console.log(therapists)\n    return {\n      therapists: therapists\n    }\n  }\n} else {\n  Home.getInitialProps = async (ctx) => {\n    const res = await fetch('http://charlotte-therapists-api.herokuapp.com/api/v1/therapists')\n    const therapists = await res.json()\n    console.log(therapists)\n    return {\n      therapists: therapists\n    }\n  }\n}\n\nexport default Home\n\n// <Listings therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n"]},"metadata":{},"sourceType":"module"}