{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Head from 'next/head';\nimport getTherapists from \"../data\";\nimport Listings from '../components/Listings';\nimport Listing from '../components/Listing';\nimport NavBar from '../components/NavBar';\nimport LeftBar from '../components/LeftBar';\nimport Box from '@material-ui/core/Box';\nimport Map from '../components/Map';\nimport Midbar from '../components/Midbar';\nimport fetch from 'isomorphic-unfetch';\nconst useStyles = makeStyles({\n  main: {\n    display: \"flex\",\n    height: \"calc(100vh - 60px)\"\n  },\n  mapbox: {\n    flexgrow: 1\n  }\n});\n\nconst Home = props => {\n  const classes = useStyles();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(null);\n  const {\n    0: selectedTherapist,\n    1: setSelectedTherapist\n  } = useState(props.therapists[0]);\n  const {\n    0: showMidbar,\n    1: setShowMidbar\n  } = useState(true);\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find(therapist => therapist.id == selected);\n  };\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n    return () => {};\n  }, [selected]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Charlotte Therapists\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), \"// TO-DO move font loading to server side using custom _document.js\"), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(LeftBar, {\n    therapists: props.therapists,\n    selected: selected,\n    setSelected: setSelected,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(Midbar, {\n    therapist: selectedTherapist,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    display: {\n      xs: 'none',\n      sm: 'block'\n    },\n    style: {\n      flexGrow: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 73\n    }\n  }))));\n};\n\nif (true) {\n  Home.getInitialProps = async ctx => {\n    const therapists = getTherapists();\n    console.log(therapists);\n    return {\n      therapists: therapists\n    };\n  };\n} else {\n  Home.getInitialProps = async ctx => {\n    const res = await fetch('http://charlotte-therapists-api.herokuapp.com/api/v1/therapists');\n    const therapists = await res.json();\n    console.log(therapists);\n    return {\n      therapists: therapists\n    };\n  };\n}\n\nexport default Home; // <Listings therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/pages/index.js"],"names":["useState","useEffect","makeStyles","Head","getTherapists","Listings","Listing","NavBar","LeftBar","Box","Map","Midbar","fetch","useStyles","main","display","height","mapbox","flexgrow","Home","props","classes","selected","setSelected","selectedTherapist","setSelectedTherapist","therapists","showMidbar","setShowMidbar","getSelectedTherapist","find","therapist","id","root","xs","sm","flexGrow","getInitialProps","ctx","console","log","res","json"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Head from 'next/head'\nimport getTherapists from \"../data\"\nimport Listings from '../components/Listings'\nimport Listing from '../components/Listing'\nimport NavBar from '../components/NavBar'\nimport LeftBar from '../components/LeftBar'\nimport Box from '@material-ui/core/Box'\nimport Map from '../components/Map'\nimport Midbar from '../components/Midbar'\nimport fetch from 'isomorphic-unfetch'\n\n\nconst useStyles = makeStyles({\n  main: {\n    display:\"flex\",\n    height:\"calc(100vh - 60px)\",\n  },\n  mapbox: {\n    flexgrow:1\n  }\n});\n\nconst Home = props => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[0])\n  const [showMidbar, setShowMidbar] = useState(true)\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n\n    return () => {\n\n    }\n  }, [selected])\n\n  return (\n    <div className={classes.root}>\n      <Head>\n        <title>Charlotte Therapists</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        // TO-DO move font loading to server side using custom _document.js\n      </Head>\n\n      <NavBar />\n\n      <Box className={classes.main}>\n        <LeftBar therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Box display={{xs: 'none', sm:'block'}} style={{flexGrow: '1'}}><Map therapists={props.therapists} selected= {selected}/></Box>\n      </Box>\n\n\n    </div>\n  )\n}\n\nif (process.env.NODE_ENV === \"development\") {\n  Home.getInitialProps = async (ctx) => {\n    const therapists = getTherapists()\n    console.log(therapists)\n    return {\n      therapists: therapists\n    }\n  }\n} else {\n  Home.getInitialProps = async (ctx) => {\n    const res = await fetch('http://charlotte-therapists-api.herokuapp.com/api/v1/therapists')\n    const therapists = await res.json()\n    console.log(therapists)\n    return {\n      therapists: therapists\n    }\n  }\n}\n\nexport default Home\n\n// <Listings therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n"]},"metadata":{},"sourceType":"module"}