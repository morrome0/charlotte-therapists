{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Map.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    height: '100vh'\n  }\n});\n\nvar Map = function Map(props) {\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      map = _useState[0],\n      setMap = _useState[1];\n\n  var _useState2 = useState([]),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var mapRef = useRef(null);\n\n  var initMap = function initMap() {\n    var map = new google.maps.Map(mapRef.current, {\n      center: {\n        lat: 35.2271,\n        lng: -80.8431\n      },\n      zoom: 12\n    });\n    setMap(map);\n    var markers = [];\n    props.therapists.forEach(function (therapist) {\n      if (therapist.location) {\n        var marker = new google.maps.Marker({\n          position: therapist.location,\n          map: map\n        });\n        markers.push({\n          \"id\": therapist.id,\n          \"object\": marker\n        });\n      }\n    });\n    setMarkers(markers);\n  };\n\n  useEffect(function () {\n    initMap();\n    return function () {};\n  }, []);\n\n  var changeSelectedMarker = function changeSelectedMarker() {\n    markers.forEach(function (marker) {\n      return marker.object.setAnimation(null);\n    });\n\n    if (props.therapists.find(function (therapist) {\n      return therapist.id == props.selected;\n    }).location) {\n      markers.find(function (marker) {\n        return marker.id == props.selected;\n      }).object.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  };\n\n  useEffect(function () {\n    if (props.selected) changeSelectedMarker();\n    return function () {};\n  }, [props.selected]);\n  return __jsx(\"div\", {\n    ref: mapRef,\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Map.js"],"names":["React","useEffect","useRef","useState","makeStyles","useStyles","root","display","height","Map","props","classes","map","setMap","markers","setMarkers","mapRef","initMap","google","maps","current","center","lat","lng","zoom","therapists","forEach","therapist","location","marker","Marker","position","push","id","changeSelectedMarker","object","setAnimation","find","selected","Animation","BOUNCE"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    height: '100vh',\n  },\n});\n\nconst Map = props => {\n  const classes = useStyles()\n  const [ map, setMap ] = useState({})\n  const [ markers, setMarkers ] = useState([])\n  const mapRef = useRef(null)\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: { lat: 35.2271, lng: -80.8431 },\n      zoom: 12\n    });\n    setMap(map)\n\n    const markers = []\n    props.therapists.forEach((therapist) => {\n      if (therapist.location) {\n        let marker = new google.maps.Marker({position: therapist.location , map: map})\n        markers.push({\"id\": therapist.id, \"object\": marker})\n      }\n    })\n    setMarkers(markers)\n  }\n\n  useEffect(() => {\n    initMap()\n    return () => {\n    }\n  }, [])\n\n\n  const changeSelectedMarker = () => {\n    markers.forEach((marker) => marker.object.setAnimation(null))\n    if (props.therapists.find((therapist) => therapist.id == props.selected).location) {\n      markers.find((marker) => marker.id == props.selected).object.setAnimation(google.maps.Animation.BOUNCE)\n    }\n  }\n\n  useEffect(() => {\n    if (props.selected) changeSelectedMarker()\n    return () => {\n    }\n  }, [props.selected])\n\n  return (\n    <div ref={mapRef} className={classes.root}></div>\n  )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}