{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/App.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Listings from './Listings';\nimport Listing from './Listing';\nimport NavBar from './NavBar';\nimport Box from '@material-ui/core/Box';\nimport Map from './Map';\nimport Midbar from './Midbar';\nimport Filters from './Filters';\nimport Modal from './Modal';\nimport ModalContent from './ModalContent';\nimport ActionBar from './ActionBar';\nimport { throttle } from 'lodash';\nvar useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    display: \"flex\",\n    height: '100%',\n    overflow: \"hidden\"\n  },\n  mapbox: {\n    flexgrow: 1\n  }\n});\n\nvar App = function App(props) {\n  var classes = useStyles(); // MOBILE\n\n  var _useState = useState(false),\n      mobile = _useState[0],\n      setMobile = _useState[1];\n\n  useEffect(function () {\n    setMobile(window.innerWidth < 480);\n  }, []);\n  useEffect(function () {\n    window.addEventListener('resize', onWindowResize);\n    return function () {\n      return window.removeEventListener('resize', onWindowResize);\n    };\n  });\n  var onWindowResize = throttle(function () {\n    return setMobile(window.innerWidth < 480);\n  }, 200, {\n    'leading': true\n  }); // LISTINGS\n\n  var _useState2 = useState(null),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(props.therapists[0]),\n      selectedTherapist = _useState3[0],\n      setSelectedTherapist = _useState3[1];\n\n  var _useState4 = useState(false),\n      showMidbar = _useState4[0],\n      setShowMidbar = _useState4[1];\n\n  var getSelectedTherapist = function getSelectedTherapist() {\n    return props.therapists.find(function (therapist) {\n      return therapist.id == selected;\n    });\n  };\n\n  useEffect(function () {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n  }, [selected]); // FILTERS\n\n  var defaultFilters = {\n    clientTypes: \"\",\n    specialties: \"\",\n    insurance: \"\"\n  };\n\n  var _useState5 = useState(defaultFilters),\n      filters = _useState5[0],\n      setFilters = _useState5[1];\n\n  var changeFilters = function changeFilters(filter, value) {\n    setFilters(_objectSpread({}, filters, _defineProperty({}, filter, value)));\n  };\n\n  var clearFilters = function clearFilters() {\n    setFilters(defaultFilters);\n  };\n\n  var therapists = props.therapists.filter(function (therapist) {\n    return (filters.clientTypes ? therapist.clientTypes.includes(filters.clientTypes) : therapist) && (filters.specialties ? therapist.specialties.includes(filters.specialties) : therapist) && (filters.insurance ? therapist.insurance.includes(filters.insurance) : therapist);\n  }); // MOBILE DRAWER\n\n  var _useState6 = useState(false),\n      drawer = _useState6[0],\n      setDrawer = _useState6[1];\n\n  var toggleDrawer = function toggleDrawer() {\n    setDrawer(!drawer);\n  }; // MODAL\n\n\n  var _useState7 = useState(\"\"),\n      modal = _useState7[0],\n      setModal = _useState7[1];\n\n  var showModal = function showModal(content) {\n    setModal(content);\n  };\n\n  var closeModal = function closeModal() {\n    setModal(\"\");\n  }; // REQUEST A LISTING STATE LOGIC\n\n\n  var _useState8 = useState({\n    name: \"\",\n    email: \"\"\n  }),\n      formFields = _useState8[0],\n      setFormFields = _useState8[1];\n\n  var changeFormFields = function changeFormFields(e) {\n    setFormFields(_objectSpread({}, formFields, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var submitForm = function submitForm(e) {\n    var url, response;\n    return _regeneratorRuntime.async(function submitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setModal(\"loader\");\n            url = process.env.API_BASE_URL + '/request-listing';\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Token': process.env.API_TOKEN\n              },\n              body: JSON.stringify(formFields)\n            }));\n\n          case 5:\n            response = _context.sent;\n            response.ok ? setModal(\"success\") : setModal(\"fail\");\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, __jsx(NavBar, {\n    showModal: showModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), __jsx(ActionBar, {\n    clearFilters: clearFilters,\n    onChange: changeFilters,\n    activeFilters: filters,\n    catalogue: props.catalogue,\n    drawer: drawer,\n    toggleDrawer: toggleDrawer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: classes.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, __jsx(Listings, {\n    therapists: therapists,\n    selected: selected,\n    setSelected: setSelected,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), __jsx(Midbar, {\n    therapist: selectedTherapist,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    display: {\n      xs: 'none',\n      sm: 'block'\n    },\n    style: {\n      flexGrow: '1'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 73\n    }\n  }))), modal && __jsx(Modal, {\n    closeModal: closeModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, __jsx(ModalContent, {\n    content: modal,\n    formFields: formFields,\n    handleChange: changeFormFields,\n    handleSubmit: submitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/App.js"],"names":["useState","useEffect","makeStyles","Listings","Listing","NavBar","Box","Map","Midbar","Filters","Modal","ModalContent","ActionBar","throttle","useStyles","root","height","display","flexDirection","main","overflow","mapbox","flexgrow","App","props","classes","mobile","setMobile","window","innerWidth","addEventListener","onWindowResize","removeEventListener","selected","setSelected","therapists","selectedTherapist","setSelectedTherapist","showMidbar","setShowMidbar","getSelectedTherapist","find","therapist","id","defaultFilters","clientTypes","specialties","insurance","filters","setFilters","changeFilters","filter","value","clearFilters","includes","drawer","setDrawer","toggleDrawer","modal","setModal","showModal","content","closeModal","name","email","formFields","setFormFields","changeFormFields","e","target","submitForm","preventDefault","url","process","env","API_BASE_URL","fetch","method","headers","API_TOKEN","body","JSON","stringify","response","ok","catalogue","xs","sm","flexGrow"],"mappings":"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","sourcesContent":["import { useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Listings from './Listings'\nimport Listing from './Listing'\nimport NavBar from './NavBar'\nimport Box from '@material-ui/core/Box'\nimport Map from './Map'\nimport Midbar from './Midbar'\nimport Filters from './Filters'\nimport Modal from './Modal'\nimport ModalContent from './ModalContent'\nimport ActionBar from './ActionBar'\nimport { throttle } from 'lodash'\n\n\nconst useStyles = makeStyles({\n  root: {\n    height:'100vh',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    display:\"flex\",\n    height:'100%',\n    overflow:\"hidden\"\n  },\n  mapbox: {\n    flexgrow:1\n  }\n});\n\nconst App = props => {\n  const classes = useStyles()\n\n  // MOBILE\n  const [mobile, setMobile] = useState(false)\n\n  useEffect(() => {\n    setMobile(window.innerWidth < 480)\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('resize', onWindowResize)\n    return () => window.removeEventListener('resize', onWindowResize)\n  })\n\n  const onWindowResize = throttle(() => setMobile( window.innerWidth < 480 ), 200, { 'leading': true});\n\n  // LISTINGS\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[0])\n  const [showMidbar, setShowMidbar] = useState(false)\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n  }, [selected])\n\n  // FILTERS\n  const defaultFilters = {\n    clientTypes: \"\",\n    specialties: \"\",\n    insurance: \"\",\n  }\n  const [filters, setFilters] = useState(defaultFilters)\n  const changeFilters = (filter, value) => {\n    setFilters({\n      ...filters,\n      [filter]: value\n    })\n  }\n\n  const clearFilters = () => {\n    setFilters(defaultFilters)\n  }\n\n  const therapists = props.therapists.filter(function (therapist) {\n    return (\n      (filters.clientTypes ? therapist.clientTypes.includes(filters.clientTypes) : therapist) &&\n      (filters.specialties ? therapist.specialties.includes(filters.specialties) : therapist) &&\n      (filters.insurance ? therapist.insurance.includes(filters.insurance) : therapist)\n    )\n  })\n\n  // MOBILE DRAWER\n  const [drawer, setDrawer] = useState(false)\n\n  const toggleDrawer = () => {\n    setDrawer(!drawer)\n  }\n\n  // MODAL\n  const [modal, setModal] = useState(\"\")\n\n  const showModal = (content) => {\n    setModal(content)\n  }\n\n  const closeModal = () => {\n    setModal(\"\")\n  }\n\n\n  // REQUEST A LISTING STATE LOGIC\n  const [formFields, setFormFields] = useState({\n    name: \"\",\n    email: \"\"\n  })\n\n  const changeFormFields = e => {\n    setFormFields({...formFields,\n    [e.target.name]: e.target.value\n    })\n  }\n\n  const submitForm = async (e) => {\n    e.preventDefault()\n    setModal(\"loader\")\n    const url = process.env.API_BASE_URL + '/request-listing'\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json',\n      'Token': process.env.API_TOKEN\n      },\n      body: JSON.stringify(formFields),\n    })\n    response.ok ? setModal(\"success\") : setModal(\"fail\")\n  }\n\n  return (\n    <div className={classes.root}>\n      <NavBar showModal={showModal} />\n      <ActionBar clearFilters={clearFilters} onChange={changeFilters} activeFilters={filters} catalogue={props.catalogue} drawer={drawer} toggleDrawer={toggleDrawer}/>\n      <Box className={classes.main}>\n        <Listings therapists={therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Box display={{xs: 'none', sm:'block'}} style={{flexGrow: '1'}}><Map therapists={props.therapists} selected= {selected}/></Box>\n      </Box>\n      {modal &&\n      <Modal closeModal={closeModal}>\n        <ModalContent content={modal} formFields={formFields} handleChange={changeFormFields} handleSubmit={submitForm} />\n      </Modal>\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}