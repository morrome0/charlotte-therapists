{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Filters.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport SingleSelect from './SingleSelect';\nimport SelectMultiple from './SelectMultiple';\nimport Button from '@material-ui/core/Button';\nimport SelectOptions from './SelectOptions';\nimport Filter from './Filter';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: '#fff',\n      padding: \"0 15px 15px\",\n      borderBottom: \"1px solid #ddd\",\n      position: 'relative'\n    },\n    filterButton: {\n      height: 40,\n      width: 40,\n      margin: \"0 10px\"\n    },\n    filterIcon: {\n      verticalAlign: \"middle\",\n      color: \"#777\",\n      fontSize: 26\n    },\n    active: {\n      color: \"blue\"\n    }\n  };\n});\n\nvar anyActiveFilters = function anyActiveFilters(activeFilters) {\n  for (var key in activeFilters) {\n    if (activeFilters[key] != \"\") {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar Filters = function Filters(props) {\n  var classes = useStyles();\n  return __jsx(Box, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    onclick: function onclick(e) {\n      return console.log(\"clear\");\n    },\n    className: classes.filterButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    className: \"\".concat(classes.filterIcon, \" \").concat(anyActiveFilters(props.activeFilters) && classes.active, \" \"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 90\n    }\n  }, \"filter_list\")), __jsx(Filter, {\n    activeFilter: props.activeFilters.clientTypes,\n    options: props.catalogue.clientTypes,\n    showOptions: props.showOptions,\n    visible: props.visibleOptions === \"clientTypes\",\n    filter: \"clientTypes\",\n    onChange: props.onChange,\n    label: \"Client Type\",\n    type: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(Filter, {\n    activeFilter: props.activeFilters.specialties,\n    options: props.catalogue.specialties,\n    showOptions: props.showOptions,\n    visible: props.visibleOptions === \"specialties\",\n    filter: \"specialties\",\n    onChange: props.onChange,\n    label: \"Specialty\",\n    type: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Filters;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Filters.js"],"names":["useState","useEffect","makeStyles","Container","Box","SingleSelect","SelectMultiple","Button","SelectOptions","Filter","Icon","IconButton","useStyles","theme","root","background","padding","borderBottom","position","filterButton","height","width","margin","filterIcon","verticalAlign","color","fontSize","active","anyActiveFilters","activeFilters","key","Filters","props","classes","e","console","log","clientTypes","catalogue","showOptions","visibleOptions","onChange","specialties"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport SingleSelect from './SingleSelect'\nimport SelectMultiple from './SelectMultiple'\nimport Button from '@material-ui/core/Button'\nimport SelectOptions from './SelectOptions'\nimport Filter from './Filter'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background:'#fff',\n    padding:\"0 15px 15px\",\n    borderBottom: \"1px solid #ddd\",\n    position:'relative',\n  },\n  filterButton: {\n    height:40,\n    width:40,\n    margin:\"0 10px\",\n  },\n  filterIcon: {\n    verticalAlign:\"middle\",\n    color:\"#777\",\n    fontSize:26,\n  },\n  active: {\n    color: \"blue\",\n  }\n}));\n\nconst anyActiveFilters = activeFilters => {\n  for (let key in activeFilters) {\n    if (activeFilters[key] != \"\") {\n      return true\n    }\n  }\n  return false\n}\n\n\nconst Filters = props => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <IconButton onclick={(e) => console.log(\"clear\")} className={classes.filterButton}><Icon className={`${classes.filterIcon} ${anyActiveFilters(props.activeFilters) && classes.active} `}>filter_list</Icon></IconButton>\n      <Filter activeFilter={props.activeFilters.clientTypes} options={props.catalogue.clientTypes} showOptions={props.showOptions} visible={(props.visibleOptions === \"clientTypes\")} filter=\"clientTypes\" onChange={props.onChange} label=\"Client Type\" type=\"radio\"/>\n      <Filter activeFilter={props.activeFilters.specialties} options={props.catalogue.specialties} showOptions={props.showOptions} visible={(props.visibleOptions === \"specialties\")} filter=\"specialties\" onChange={props.onChange} label=\"Specialty\" type=\"radio\"/>\n  </Box>\n  )\n}\n\nexport default Filters\n"]},"metadata":{},"sourceType":"module"}