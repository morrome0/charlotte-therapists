{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/App.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Listings from './Listings';\nimport Listing from './Listing';\nimport NavBar from './NavBar';\nimport Box from '@material-ui/core/Box';\nimport Map from './Map';\nimport Midbar from './Midbar';\nimport FiltersBar from './FiltersBar';\nimport Modal from './Modal';\nimport ModalContent from './ModalContent';\nimport { throttle } from 'lodash';\nimport BottomBar from './mobile/BottomBar';\nconst useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    display: \"flex\",\n    height: '100%',\n    overflow: \"hidden\"\n  },\n  mapbox: {\n    flexgrow: 1\n  }\n});\n\nconst App = props => {\n  const classes = useStyles(); // MOBILE\n\n  const {\n    0: mobile,\n    1: setMobile\n  } = useState(false);\n  useEffect(() => {\n    setMobile(window.innerWidth < 960);\n  }, []);\n  useEffect(() => {\n    window.addEventListener('resize', onWindowResize);\n    return () => window.removeEventListener('resize', onWindowResize);\n  });\n  const onWindowResize = throttle(() => setMobile(window.innerWidth < 960), 200, {\n    'leading': true\n  }); // LISTINGS\n\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(null);\n  const {\n    0: selectedTherapist,\n    1: setSelectedTherapist\n  } = useState(props.therapists[0]);\n  const {\n    0: showMidbar,\n    1: setShowMidbar\n  } = useState(false);\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find(therapist => therapist.id == selected);\n  };\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n  }, [selected]); // FILTERS\n\n  const defaultFilters = {\n    clientTypes: \"\",\n    specialties: \"\",\n    insurance: \"\"\n  };\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(defaultFilters);\n\n  const changeFilters = (filter, value) => {\n    setFilters(_objectSpread({}, filters, {\n      [filter]: value\n    }));\n  };\n\n  const clearFilters = () => {\n    setFilters(defaultFilters);\n  };\n\n  const therapists = props.therapists.filter(function (therapist) {\n    return (filters.clientTypes ? therapist.clientTypes.includes(filters.clientTypes) : therapist) && (filters.specialties ? therapist.specialties.includes(filters.specialties) : therapist) && (filters.insurance ? therapist.insurance.includes(filters.insurance) : therapist);\n  }); // MOBILE DRAWER\n\n  const {\n    0: subpage,\n    1: setSubpage\n  } = useState(\"\");\n\n  const closeSubpage = () => {\n    setSubpage(\"\");\n  }; // MODAL\n\n\n  const {\n    0: modal,\n    1: setModal\n  } = useState(\"\");\n\n  const showModal = content => {\n    setModal(content);\n  };\n\n  const closeModal = () => {\n    setModal(\"\");\n  }; // REQUEST A LISTING STATE LOGIC\n\n\n  const {\n    0: formFields,\n    1: setFormFields\n  } = useState({\n    name: \"\",\n    email: \"\"\n  });\n\n  const changeFormFields = e => {\n    setFormFields(_objectSpread({}, formFields, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const submitForm = async e => {\n    e.preventDefault();\n    setModal(\"loader\");\n    const url = process.env.API_BASE_URL + '/request-listing';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Token': process.env.API_TOKEN\n      },\n      body: JSON.stringify(formFields)\n    });\n    response.ok ? setModal(\"success\") : setModal(\"fail\");\n  };\n\n  if (mobile) {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, __jsx(NavBar, {\n      showModal: showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), __jsx(Box, {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, __jsx(Listings, {\n      therapists: therapists,\n      selected: selected,\n      setSelected: setSelected,\n      showMidbar: showMidbar,\n      setShowMidbar: setShowMidbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), __jsx(Midbar, {\n      therapist: selectedTherapist,\n      showMidbar: showMidbar,\n      setShowMidbar: setShowMidbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    })), __jsx(BottomBar, {\n      clearFilters: clearFilters,\n      onChange: changeFilters,\n      activeFilters: filters,\n      catalogue: props.catalogue,\n      drawer: drawer,\n      toggleDrawer: toggleDrawer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), modal && __jsx(Modal, {\n      closeModal: closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, __jsx(ModalContent, {\n      content: modal,\n      formFields: formFields,\n      handleChange: changeFormFields,\n      handleSubmit: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, __jsx(NavBar, {\n      showModal: showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }), __jsx(FiltersBar, {\n      clearFilters: clearFilters,\n      onChange: changeFilters,\n      activeFilters: filters,\n      catalogue: props.catalogue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }), __jsx(Box, {\n      className: classes.main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, __jsx(Listings, {\n      therapists: therapists,\n      selected: selected,\n      setSelected: setSelected,\n      showMidbar: showMidbar,\n      setShowMidbar: setShowMidbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }), __jsx(Midbar, {\n      therapist: selectedTherapist,\n      showMidbar: showMidbar,\n      setShowMidbar: setShowMidbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }\n    }), __jsx(Box, {\n      style: {\n        flexGrow: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, __jsx(Map, {\n      therapists: props.therapists,\n      selected: selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 40\n      }\n    }))), modal && __jsx(Modal, {\n      closeModal: closeModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, __jsx(ModalContent, {\n      content: modal,\n      formFields: formFields,\n      handleChange: changeFormFields,\n      handleSubmit: submitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/App.js"],"names":["useState","useEffect","makeStyles","Listings","Listing","NavBar","Box","Map","Midbar","FiltersBar","Modal","ModalContent","throttle","BottomBar","useStyles","root","height","display","flexDirection","main","overflow","mapbox","flexgrow","App","props","classes","mobile","setMobile","window","innerWidth","addEventListener","onWindowResize","removeEventListener","selected","setSelected","selectedTherapist","setSelectedTherapist","therapists","showMidbar","setShowMidbar","getSelectedTherapist","find","therapist","id","defaultFilters","clientTypes","specialties","insurance","filters","setFilters","changeFilters","filter","value","clearFilters","includes","subpage","setSubpage","closeSubpage","modal","setModal","showModal","content","closeModal","formFields","setFormFields","name","email","changeFormFields","e","target","submitForm","preventDefault","url","process","env","API_BASE_URL","response","fetch","method","headers","API_TOKEN","body","JSON","stringify","ok","catalogue","drawer","toggleDrawer","flexGrow"],"mappings":"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","sourcesContent":["import { useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Listings from './Listings'\nimport Listing from './Listing'\nimport NavBar from './NavBar'\nimport Box from '@material-ui/core/Box'\nimport Map from './Map'\nimport Midbar from './Midbar'\nimport FiltersBar from './FiltersBar'\nimport Modal from './Modal'\nimport ModalContent from './ModalContent'\nimport { throttle } from 'lodash'\nimport BottomBar from './mobile/BottomBar'\n\n\nconst useStyles = makeStyles({\n  root: {\n    height:'100vh',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    display:\"flex\",\n    height:'100%',\n    overflow:\"hidden\"\n  },\n  mapbox: {\n    flexgrow:1\n  }\n});\n\nconst App = props => {\n  const classes = useStyles()\n\n  // MOBILE\n  const [mobile, setMobile] = useState(false)\n\n  useEffect(() => {\n    setMobile(window.innerWidth < 960)\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener('resize', onWindowResize)\n    return () => window.removeEventListener('resize', onWindowResize)\n  })\n\n  const onWindowResize = throttle(() => setMobile( window.innerWidth < 960 ), 200, { 'leading': true});\n\n  // LISTINGS\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[0])\n  const [showMidbar, setShowMidbar] = useState(false)\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n  }, [selected])\n\n  // FILTERS\n  const defaultFilters = {\n    clientTypes: \"\",\n    specialties: \"\",\n    insurance: \"\",\n  }\n  const [filters, setFilters] = useState(defaultFilters)\n  const changeFilters = (filter, value) => {\n    setFilters({\n      ...filters,\n      [filter]: value\n    })\n  }\n\n  const clearFilters = () => {\n    setFilters(defaultFilters)\n  }\n\n  const therapists = props.therapists.filter(function (therapist) {\n    return (\n      (filters.clientTypes ? therapist.clientTypes.includes(filters.clientTypes) : therapist) &&\n      (filters.specialties ? therapist.specialties.includes(filters.specialties) : therapist) &&\n      (filters.insurance ? therapist.insurance.includes(filters.insurance) : therapist)\n    )\n  })\n\n  // MOBILE DRAWER\n  const [subpage, setSubpage] = useState(\"\")\n\n  const closeSubpage = () => {\n    setSubpage(\"\")\n  }\n\n  // MODAL\n  const [modal, setModal] = useState(\"\")\n\n  const showModal = (content) => {\n    setModal(content)\n  }\n\n  const closeModal = () => {\n    setModal(\"\")\n  }\n\n\n  // REQUEST A LISTING STATE LOGIC\n  const [formFields, setFormFields] = useState({\n    name: \"\",\n    email: \"\"\n  })\n\n  const changeFormFields = e => {\n    setFormFields({...formFields,\n    [e.target.name]: e.target.value\n    })\n  }\n\n  const submitForm = async (e) => {\n    e.preventDefault()\n    setModal(\"loader\")\n    const url = process.env.API_BASE_URL + '/request-listing'\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n      'Content-Type': 'application/json',\n      'Token': process.env.API_TOKEN\n      },\n      body: JSON.stringify(formFields),\n    })\n    response.ok ? setModal(\"success\") : setModal(\"fail\")\n  }\n\n  if (mobile) {\n    return (\n      <div className={classes.root}>\n        <NavBar showModal={showModal} />\n        <Box className={classes.main}>\n          <Listings therapists={therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n          <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        </Box>\n        <BottomBar clearFilters={clearFilters} onChange={changeFilters} activeFilters={filters} catalogue={props.catalogue} drawer={drawer} toggleDrawer={toggleDrawer}/>\n\n        {modal &&\n        <Modal closeModal={closeModal}>\n          <ModalContent content={modal} formFields={formFields} handleChange={changeFormFields} handleSubmit={submitForm} />\n        </Modal>\n        }\n      </div>\n    )\n  } else {\n    return (\n      <div className={classes.root}>\n        <NavBar showModal={showModal} />\n        <FiltersBar clearFilters={clearFilters} onChange={changeFilters} activeFilters={filters} catalogue={props.catalogue} />\n        <Box className={classes.main}>\n          <Listings therapists={therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n          <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n          <Box style={{flexGrow: '1'}}><Map therapists={props.therapists} selected= {selected}/></Box>\n        </Box>\n        {modal &&\n        <Modal closeModal={closeModal}>\n          <ModalContent content={modal} formFields={formFields} handleChange={changeFormFields} handleSubmit={submitForm} />\n        </Modal>\n        }\n      </div>\n    )\n  }\n\n\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}