{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Midbar.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nvar useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    display: 'inline-block',\n    height: '100vh',\n    width: '500px',\n    background: \"#efe\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  closeButton: {\n    position: 'absolute',\n    right: 5,\n    top: 5,\n    color: \"grey\"\n  }\n});\n\nvar Midbar = function Midbar(props) {\n  var classes = useStyles();\n\n  if (props.selectedTherapist) {\n    return __jsx(\"div\", {\n      className: props.showMidbar ? classes.root : classes.hide,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: function onClick() {\n        return props.setShowMidbar(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    })), __jsx(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, props.selectedTherapist.name));\n  } else {\n    return __jsx(\"div\", {\n      className: props.showMidbar ? classes.root : classes.hide,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: function onClick() {\n        return props.setShowMidbar(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(CloseIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default Midbar;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Midbar.js"],"names":["React","makeStyles","IconButton","CloseIcon","Typography","useStyles","root","position","display","height","width","background","hide","closeButton","right","top","color","Midbar","props","classes","selectedTherapist","showMidbar","setShowMidbar","name"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,OAAO,EAAE,cAFL;AAGJC,IAAAA,MAAM,EAAE,OAHJ;AAIJC,IAAAA,KAAK,EAAE,OAJH;AAKJC,IAAAA,UAAU,EAAE;AALR,GADqB;AAQ3BC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,OAAO,EAAE;AADL,GARqB;AAW3BK,EAAAA,WAAW,EAAE;AACZN,IAAAA,QAAQ,EAAE,UADE;AAEZO,IAAAA,KAAK,EAAE,CAFK;AAGZC,IAAAA,GAAG,EAAE,CAHO;AAIZC,IAAAA,KAAK,EAAE;AAJK;AAXc,CAAD,CAA5B;;AAmBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MAAMC,OAAO,GAAGd,SAAS,EAAzB;;AAEA,MAAIa,KAAK,CAACE,iBAAV,EAA6B;AAC3B,WACE;AAAK,MAAA,SAAS,EAAEF,KAAK,CAACG,UAAN,GAAmBF,OAAO,CAACb,IAA3B,GAAkCa,OAAO,CAACP,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,oBAAW,OAAvB;AAA+B,MAAA,SAAS,EAAEO,OAAO,CAACN,WAAlD;AAA+D,MAAA,OAAO,EAAE;AAAA,eAAMK,KAAK,CAACI,aAAN,CAAoB,KAApB,CAAN;AAAA,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACE,iBAAN,CAAwBG,IAD3B,CAJF,CADF;AAUD,GAXD,MAaK;AACH,WACE;AAAK,MAAA,SAAS,EAAEL,KAAK,CAACG,UAAN,GAAmBF,OAAO,CAACb,IAA3B,GAAkCa,OAAO,CAACP,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,oBAAW,OAAvB;AAA+B,MAAA,SAAS,EAAEO,OAAO,CAACN,WAAlD;AAA+D,MAAA,OAAO,EAAE;AAAA,eAAMK,KAAK,CAACI,aAAN,CAAoB,KAApB,CAAN;AAAA,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;AACF,CAzBD;;AA2BA,eAAeL,MAAf","sourcesContent":["import React from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    display: 'inline-block',\n    height: '100vh',\n    width: '500px',\n    background: \"#efe\"\n  },\n  hide: {\n    display: \"none\",\n  },\n  closeButton: {\n   position: 'absolute',\n   right: 5,\n   top: 5,\n   color: \"grey\",\n },\n});\n\nconst Midbar = props => {\n  const classes = useStyles()\n\n  if (props.selectedTherapist) {\n    return (\n      <div className={props.showMidbar ? classes.root : classes.hide}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={() => props.setShowMidbar(false)}>\n          <CloseIcon />\n        </IconButton>\n        <Typography>\n          {props.selectedTherapist.name}\n        </Typography>\n      </div>\n    )\n  }\n\n  else {\n    return (\n      <div className={props.showMidbar ? classes.root : classes.hide}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={() => props.setShowMidbar(false)}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n    )\n  }\n}\n\nexport default Midbar\n"]},"metadata":{},"sourceType":"module"}