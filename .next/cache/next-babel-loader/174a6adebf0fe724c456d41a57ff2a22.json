{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/SelectOptions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Option from './Option';\nconst useStyles = makeStyles(theme => ({\n  selectOptions: {\n    minWidth: 200,\n    background: '#fff',\n    borderRadius: 4,\n    border: \"1px solid #ddd\",\n    boxShadow: '0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15)',\n    position: 'absolute',\n    top: 32,\n    zIndex: 1000,\n    fontFamily: 'raleway',\n    fontSize: 13,\n    fontWeight: '500'\n  }\n}));\n\nconst Select = props => {\n  const classes = useStyles();\n  const node = useRef();\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n\n  const handleClick = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n\n    console.log(\"close this\");\n  };\n\n  return __jsx(\"form\", {\n    onChange: e => props.onChange(props.filter, e.target.value),\n    ref: node,\n    className: classes.selectOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, props.options.map((option, i) => __jsx(Option, {\n    id: i,\n    checked: props.selected === option,\n    value: option,\n    name: props.filter,\n    type: props.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, option)));\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/SelectOptions.js"],"names":["useState","useEffect","useRef","makeStyles","Box","Option","useStyles","theme","selectOptions","minWidth","background","borderRadius","border","boxShadow","position","top","zIndex","fontFamily","fontSize","fontWeight","Select","props","classes","node","document","addEventListener","handleClick","removeEventListener","e","current","contains","target","console","log","onChange","filter","value","options","map","option","i","selected","type"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,QAAQ,EAAE,GADG;AAEbC,IAAAA,UAAU,EAAC,MAFE;AAGbC,IAAAA,YAAY,EAAC,CAHA;AAIbC,IAAAA,MAAM,EAAE,gBAJK;AAKbC,IAAAA,SAAS,EAAE,gEALE;AAMbC,IAAAA,QAAQ,EAAC,UANI;AAObC,IAAAA,GAAG,EAAC,EAPS;AAQbC,IAAAA,MAAM,EAAC,IARM;AASbC,IAAAA,UAAU,EAAC,SATE;AAUbC,IAAAA,QAAQ,EAAC,EAVI;AAWbC,IAAAA,UAAU,EAAC;AAXE;AADsB,CAAL,CAAN,CAA5B;;AAiBA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAMiB,IAAI,GAAGrB,MAAM,EAAnB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCC,WAAvC;AAEA,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0CD,WAA1C;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMA,WAAW,GAAGE,CAAC,IAAI;AACvB,QAAIL,IAAI,CAACM,OAAL,CAAaC,QAAb,CAAsBF,CAAC,CAACG,MAAxB,CAAJ,EAAqC;AACrC;AACC;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GALD;;AAOA,SACE;AAAM,IAAA,QAAQ,EAAGL,CAAD,IAAOP,KAAK,CAACa,QAAN,CAAeb,KAAK,CAACc,MAArB,EAA6BP,CAAC,CAACG,MAAF,CAASK,KAAtC,CAAvB;AAAqE,IAAA,GAAG,EAAEb,IAA1E;AAAgF,IAAA,SAAS,EAAED,OAAO,CAACd,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,KAAK,CAACgB,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,KACjB,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAEA,CAAZ;AAAe,IAAA,OAAO,EAAEnB,KAAK,CAACoB,QAAN,KAAmBF,MAA3C;AAAmD,IAAA,KAAK,EAAEA,MAA1D;AAAkE,IAAA,IAAI,EAAElB,KAAK,CAACc,MAA9E;AAAsF,IAAA,IAAI,EAAEd,KAAK,CAACqB,IAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyGH,MAAzG,CADD,CADH,CADF;AAOD,CA1BD;;AA4BA,eAAenB,MAAf","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Option from './Option'\n\nconst useStyles = makeStyles(theme => ({\n  selectOptions: {\n    minWidth: 200,\n    background:'#fff',\n    borderRadius:4,\n    border: \"1px solid #ddd\",\n    boxShadow: '0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15)',\n    position:'absolute',\n    top:32,\n    zIndex:1000,\n    fontFamily:'raleway',\n    fontSize:13,\n    fontWeight:'500'\n  },\n}));\n\n\nconst Select = props => {\n  const classes = useStyles()\n  const node = useRef()\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick)\n    }\n  }, [])\n\n  const handleClick = e => {\n    if (node.current.contains(e.target)) {\n    return;\n    }\n    console.log(\"close this\")\n  }\n\n  return (\n    <form onChange={(e) => props.onChange(props.filter, e.target.value)} ref={node} className={classes.selectOptions}>\n      {props.options.map((option, i) => (\n        <Option id={i} checked={props.selected === option} value={option} name={props.filter} type={props.type}>{option}</Option>\n      ))}\n    </form>\n  )\n}\n\nexport default Select\n"]},"metadata":{},"sourceType":"module"}