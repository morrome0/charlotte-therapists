{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Map.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  }\n});\n\nconst Map = props => {\n  const classes = useStyles();\n  const {\n    0: map,\n    1: setMap\n  } = useState({});\n  const {\n    0: markers,\n    1: setMarkers\n  } = useState({});\n  const mapRef = useRef(null);\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: {\n        lat: 35.2271,\n        lng: -80.8431\n      },\n      zoom: 12\n    });\n    setMap(map);\n    let markerLocations = [];\n    props.therapists.forEach(therapist => {\n      therapist.location ? markerLocations.push(therapist.location) : null;\n    });\n    const markers = markerLocations.map(markerLocation => {\n      new google.maps.Marker({\n        position: {\n          lat: 35.2271,\n          lng: -80.8431\n        },\n        map: map\n      });\n    });\n    console.log(markers);\n    setMarkers(markers);\n  };\n\n  useEffect(() => {\n    initMap();\n    return () => {};\n  }, []);\n  return __jsx(\"div\", {\n    ref: mapRef,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Map.js"],"names":["React","useEffect","useRef","useState","makeStyles","useStyles","root","display","height","width","Map","props","classes","map","setMap","markers","setMarkers","mapRef","initMap","google","maps","current","center","lat","lng","zoom","markerLocations","therapists","forEach","therapist","location","push","markerLocation","Marker","position","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,cADL;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,KAAK,EAAE;AAHH;AADqB,CAAD,CAA5B;;AAQA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM;AAAA,OAAEQ,GAAF;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAAEY,OAAF;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMc,MAAM,GAAGf,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMgB,OAAO,GAAG,MAAM;AACpB,UAAML,GAAG,GAAG,IAAIM,MAAM,CAACC,IAAP,CAAYV,GAAhB,CAAoBO,MAAM,CAACI,OAA3B,EAAoC;AAC9CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,OAAP;AAAgBC,QAAAA,GAAG,EAAE,CAAC;AAAtB,OADsC;AAE9CC,MAAAA,IAAI,EAAE;AAFwC,KAApC,CAAZ;AAIAX,IAAAA,MAAM,CAACD,GAAD,CAAN;AAEA,QAAIa,eAAe,GAAG,EAAtB;AACAf,IAAAA,KAAK,CAACgB,UAAN,CAAiBC,OAAjB,CAA0BC,SAAD,IAAe;AACtCA,MAAAA,SAAS,CAACC,QAAV,GAAqBJ,eAAe,CAACK,IAAhB,CAAqBF,SAAS,CAACC,QAA/B,CAArB,GAAgE,IAAhE;AACD,KAFD;AAIA,UAAMf,OAAO,GAAGW,eAAe,CAACb,GAAhB,CAAqBmB,cAAD,IAAoB;AACtD,UAAIb,MAAM,CAACC,IAAP,CAAYa,MAAhB,CAAuB;AAACC,QAAAA,QAAQ,EAAE;AAAEX,UAAAA,GAAG,EAAE,OAAP;AAAgBC,UAAAA,GAAG,EAAE,CAAC;AAAtB,SAAX;AAA6CX,QAAAA,GAAG,EAAEA;AAAlD,OAAvB;AACD,KAFe,CAAhB;AAGAsB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,OAAZ;AACAC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAjBD;;AAmBAd,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO;AAEP,WAAO,MAAM,CACZ,CADD;AAED,GALQ,EAKN,EALM,CAAT;AAOA,SACE;AAAK,IAAA,GAAG,EAAED,MAAV;AAAkB,IAAA,SAAS,EAAEL,OAAO,CAACN,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAnCD;;AAqCA,eAAeI,GAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  },\n});\n\nconst Map = props => {\n  const classes = useStyles()\n  const [ map, setMap ] = useState({})\n  const [ markers, setMarkers ] = useState({})\n  const mapRef = useRef(null)\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: { lat: 35.2271, lng: -80.8431 },\n      zoom: 12\n    });\n    setMap(map)\n\n    let markerLocations = []\n    props.therapists.forEach((therapist) => {\n      therapist.location ? markerLocations.push(therapist.location) : null\n    })\n\n    const markers = markerLocations.map((markerLocation) => {\n      new google.maps.Marker({position: { lat: 35.2271, lng: -80.8431 } , map: map})\n    })\n    console.log(markers)\n    setMarkers(markers)\n  }\n\n  useEffect(() => {\n    initMap()\n\n    return () => {\n    }\n  }, [])\n\n  return (\n    <div ref={mapRef} className={classes.root}></div>\n  )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}