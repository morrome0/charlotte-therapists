{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Head from 'next/head';\nimport getTherapists from \"../data\";\nimport Listings from '../components/Listings';\nimport Listing from '../components/Listing';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Map from '../components/Map';\nimport Midbar from '../components/Midbar';\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    height: \"100vh\"\n  }\n});\n\nconst Home = props => {\n  const classes = useStyles();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(null);\n  const {\n    0: showMidbar,\n    1: setShowMidbar\n  } = useState(true);\n  useEffect(() => {\n    if (!showMidbar) setShowMidbar(true);\n    return () => {};\n  }, [selected]);\n\n  const getSelectedTherapist = id => {\n    props.therapists.find(therapist => therapist.id == selected);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), \"// TO-DO move font loading to server side using custom _document.js\"), __jsx(Listings, {\n    therapists: props.therapists,\n    selectedTherapist: getSelectedTherapist(selected),\n    selected: selected,\n    setSelected: setSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(Midbar, {\n    therapist: getSelectedTherapist(selected),\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nHome.getInitialProps = async function () {\n  let therapists = getTherapists();\n  return {\n    therapists: therapists\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/pages/index.js"],"names":["useState","useEffect","makeStyles","Head","getTherapists","Listings","Listing","CssBaseline","Container","Map","Midbar","useStyles","root","display","height","Home","props","classes","selected","setSelected","showMidbar","setShowMidbar","getSelectedTherapist","id","therapists","find","therapist","getInitialProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Head from 'next/head'\nimport getTherapists from \"../data\"\nimport Listings from '../components/Listings'\nimport Listing from '../components/Listing'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport Map from '../components/Map'\nimport Midbar from '../components/Midbar'\n\nconst useStyles = makeStyles({\n  root: {\n    display:\"flex\",\n    height:\"100vh\",\n  },\n});\n\nconst Home = props => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState(null)\n  const [showMidbar, setShowMidbar] = useState(true)\n\n  useEffect(() => {\n    if(!showMidbar) setShowMidbar(true)\n\n    return () => {\n\n    }\n  }, [selected])\n\n  const getSelectedTherapist = id => {\n    props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        // TO-DO move font loading to server side using custom _document.js\n      </Head>\n      <Listings therapists={props.therapists} selectedTherapist={getSelectedTherapist(selected)} selected= {selected} setSelected={setSelected}/>\n      <Midbar therapist={getSelectedTherapist(selected)} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n      <Map therapists={props.therapists} selected= {selected}/>\n      <footer>\n      </footer>\n    </div>\n  )\n}\n\nHome.getInitialProps = async function() {\n  let therapists = getTherapists()\n\n  return {\n    therapists: therapists\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}