{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Filters.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport SingleSelect from './SingleSelect';\nimport SelectMultiple from './SelectMultiple';\nimport Button from '@material-ui/core/Button';\nimport SelectOptions from './SelectOptions';\nimport Filter from './Filter';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#fff',\n    padding: \"0 15px 15px 80px\",\n    borderBottom: \"1px solid #ddd\",\n    position: 'relative',\n    maxHeight: 40\n  },\n  filterIndicator: {\n    position: \"absolute\",\n    left: 10\n  },\n  filterIcon: {\n    verticalAlign: \"middle\",\n    color: \"#777\",\n    fontSize: 26,\n    marginRight: 10\n  },\n  active: {\n    color: \"#4d8ac7\"\n  },\n  clear: {\n    color: \"red\",\n    borderRadius: 20\n  }\n}));\n\nconst anyActiveFilters = activeFilters => {\n  for (let key in activeFilters) {\n    if (activeFilters[key] != \"\") {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst Filters = props => {\n  const classes = useStyles();\n  return __jsx(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: `${classes.filterIndicator} ${anyActiveFilters(props.activeFilters) && classes.active} `,\n    style: {\n      fontFamily: \"Raleway\",\n      fontWeight: \"bold\",\n      marginRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    className: `${classes.filterIcon} ${anyActiveFilters(props.activeFilters) && classes.active} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"filter_list\"), anyActiveFilters(props.activeFilters) ? \"FILTERS ON\" : \"FILTERS OFF\"), __jsx(Filter, {\n    activeFilter: props.activeFilters.clientTypes,\n    options: props.catalogue.clientTypes,\n    showOptions: props.showOptions,\n    visible: props.visibleOptions === \"clientTypes\",\n    filter: \"clientTypes\",\n    onChange: props.onChange,\n    label: \"Client Type\",\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(Filter, {\n    activeFilter: props.activeFilters.specialties,\n    options: props.catalogue.specialties,\n    showOptions: props.showOptions,\n    visible: props.visibleOptions === \"specialties\",\n    filter: \"specialties\",\n    onChange: props.onChange,\n    label: \"Specialty\",\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), anyActiveFilters(props.activeFilters) && __jsx(Button, {\n    size: \"small\",\n    onClick: props.clearFilters,\n    className: classes.clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 50\n    }\n  }, \"Clear Filters \", __jsx(Icon, {\n    style: {\n      fontSize: 14,\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 140\n    }\n  }, \"close\")));\n};\n\nexport default Filters;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Filters.js"],"names":["useState","useEffect","makeStyles","Container","Box","SingleSelect","SelectMultiple","Button","SelectOptions","Filter","Icon","IconButton","useStyles","theme","root","background","padding","borderBottom","position","maxHeight","filterIndicator","left","filterIcon","verticalAlign","color","fontSize","marginRight","active","clear","borderRadius","anyActiveFilters","activeFilters","key","Filters","props","classes","fontFamily","fontWeight","clientTypes","catalogue","showOptions","visibleOptions","onChange","specialties","clearFilters","marginLeft"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport SingleSelect from './SingleSelect'\nimport SelectMultiple from './SelectMultiple'\nimport Button from '@material-ui/core/Button'\nimport SelectOptions from './SelectOptions'\nimport Filter from './Filter'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background:'#fff',\n    padding:\"0 15px 15px 80px\",\n    borderBottom: \"1px solid #ddd\",\n    position:'relative',\n    maxHeight:40,\n  },\n  filterIndicator: {\n    position:\"absolute\",\n    left:10,\n  },\n  filterIcon: {\n    verticalAlign:\"middle\",\n    color:\"#777\",\n    fontSize:26,\n    marginRight:10,\n  },\n  active: {\n    color: \"#4d8ac7\",\n  },\n  clear: {\n    color: \"red\",\n    borderRadius:20,\n  }\n}));\n\nconst anyActiveFilters = activeFilters => {\n  for (let key in activeFilters) {\n    if (activeFilters[key] != \"\") {\n      return true\n    }\n  }\n  return false\n}\n\n\nconst Filters = props => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <span className={`${classes.filterIndicator} ${anyActiveFilters(props.activeFilters) && classes.active} `} style={{fontFamily:\"Raleway\", fontWeight:\"bold\",marginRight:20}}>\n        <Icon className={`${classes.filterIcon} ${anyActiveFilters(props.activeFilters) && classes.active} `}>filter_list</Icon>\n        {anyActiveFilters(props.activeFilters) ? \"FILTERS ON\" : \"FILTERS OFF\"}\n      </span>\n      <Filter activeFilter={props.activeFilters.clientTypes} options={props.catalogue.clientTypes} showOptions={props.showOptions} visible={(props.visibleOptions === \"clientTypes\")} filter=\"clientTypes\" onChange={props.onChange} label=\"Client Type\" type=\"radio\"/>\n      <Filter activeFilter={props.activeFilters.specialties} options={props.catalogue.specialties} showOptions={props.showOptions} visible={(props.visibleOptions === \"specialties\")} filter=\"specialties\" onChange={props.onChange} label=\"Specialty\" type=\"radio\"/>\n      { anyActiveFilters(props.activeFilters) && <Button size=\"small\" onClick={props.clearFilters} className={classes.clear}>Clear Filters <Icon style={{fontSize: 14, marginLeft: 8}}>close</Icon></Button>}\n\n    </Box>\n  )\n}\n\nexport default Filters\n"]},"metadata":{},"sourceType":"module"}