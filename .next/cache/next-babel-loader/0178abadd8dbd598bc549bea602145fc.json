{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Head from 'next/head';\nimport getTherapists from \"../data\";\nimport Listings from '../components/Listings';\nimport Listing from '../components/Listing';\nimport NavBar from '../components/NavBar';\nimport Box from '@material-ui/core/Box';\nimport Map from '../components/Map';\nimport Midbar from '../components/Midbar';\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\"\n  },\n  main: {\n    display: \"flex\",\n    height: \"calc(100% - 50px)\",\n    zIndex: 10\n  }\n});\n\nconst Home = props => {\n  const classes = useStyles();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(null);\n  const {\n    0: selectedTherapist,\n    1: setSelectedTherapist\n  } = useState(props.therapists[1]);\n  const {\n    0: showMidbar,\n    1: setShowMidbar\n  } = useState(true);\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find(therapist => therapist.id == selected);\n  };\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n    return () => {};\n  }, [selected]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Charlotte Therapists\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), \"// TO-DO move font loading to server side using custom _document.js\"), __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(Listings, {\n    therapists: props.therapists,\n    selected: selected,\n    setSelected: setSelected,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(Midbar, {\n    therapist: selectedTherapist,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nHome.getInitialProps = async function () {\n  let therapists = getTherapists();\n  return {\n    therapists: therapists\n  };\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/pages/index.js"],"names":["useState","useEffect","makeStyles","Head","getTherapists","Listings","Listing","NavBar","Box","Map","Midbar","useStyles","root","height","main","display","zIndex","Home","props","classes","selected","setSelected","selectedTherapist","setSelectedTherapist","therapists","showMidbar","setShowMidbar","getSelectedTherapist","find","therapist","id","getInitialProps"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Head from 'next/head'\nimport getTherapists from \"../data\"\nimport Listings from '../components/Listings'\nimport Listing from '../components/Listing'\nimport NavBar from '../components/NavBar'\nimport Box from '@material-ui/core/Box'\nimport Map from '../components/Map'\nimport Midbar from '../components/Midbar'\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\"\n\n  },\n  main: {\n    display:\"flex\",\n    height:\"calc(100% - 50px)\",\n    zIndex:10,\n  }\n});\n\nconst Home = props => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[1])\n  const [showMidbar, setShowMidbar] = useState(true)\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n\n    return () => {\n\n    }\n  }, [selected])\n\n  return (\n    <div>\n      <Head>\n        <title>Charlotte Therapists</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n        // TO-DO move font loading to server side using custom _document.js\n      </Head>\n\n      <NavBar />\n\n      <Box className={classes.root}>\n        <Listings therapists={props.therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Map therapists={props.therapists} selected= {selected}/>\n      </Box>\n\n\n    </div>\n  )\n}\n\nHome.getInitialProps = async function() {\n  let therapists = getTherapists()\n\n  return {\n    therapists: therapists\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}