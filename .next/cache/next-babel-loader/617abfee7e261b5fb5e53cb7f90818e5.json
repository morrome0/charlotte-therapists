{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/mobile/Filter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Option from './Option';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  header: {\n    fontSize: 30,\n    paddingTop: 20\n  },\n  row: {\n    height: 80,\n    borderBottom: \"1px solid #ddd\",\n    fontSize: 20,\n    lineHeight: \"80px\"\n  },\n  label: {\n    verticalAlign: 'middle'\n  },\n  chevronRightIcon: {\n    float: 'right',\n    verticalAlign: 'middle',\n    marginTop: 24,\n    fontSize: 40\n  }\n}));\n\nconst FilterMobile = props => {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Filters\"), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.options.map((option, i) => __jsx(\"div\", {\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Option, {\n    className: classes.label,\n    key: i,\n    id: i,\n    checked: props.selected === option,\n    value: option,\n    name: props.filter,\n    type: props.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, option)))));\n};\n\nexport default FilterMobile; // <form onChange={(e) => handleChange(e)} className={classes.selectOptions}>\n//   {props.options.map((option, i) => (\n//     <div className={classes.row}>\n//       <Option key={i} id={i} checked={props.selected === option} value={option} name={props.filter} type={props.type}>{option}</Option>\n//     </div>\n//   ))}\n// </form>","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/mobile/Filter.js"],"names":["makeStyles","ArrowBackIcon","Option","useStyles","theme","root","header","fontSize","paddingTop","row","height","borderBottom","lineHeight","label","verticalAlign","chevronRightIcon","float","marginTop","FilterMobile","props","classes","options","map","option","i","selected","filter","type"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAGrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,UAAU,EAAC;AAFL,GAH6B;AAOrCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,YAAY,EAAE,gBAFX;AAGHJ,IAAAA,QAAQ,EAAE,EAHP;AAIHK,IAAAA,UAAU,EAAC;AAJR,GAPgC;AAarCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV,GAb8B;AAgBrCC,EAAAA,gBAAgB,EAAG;AACjBC,IAAAA,KAAK,EAAC,OADW;AAEjBF,IAAAA,aAAa,EAAE,QAFE;AAGjBG,IAAAA,SAAS,EAAC,EAHO;AAIjBV,IAAAA,QAAQ,EAAC;AAJQ;AAhBkB,CAAL,CAAN,CAA5B;;AAwBA,MAAMW,YAAY,GAAGC,KAAK,IAAI;AAC9B,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AAGE,SACE;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACf,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEe,OAAO,CAACd,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,KAAK,CAACE,OAAN,CAAcC,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,KACjB;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACX,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEW,OAAO,CAACP,KAA3B;AAAkC,IAAA,GAAG,EAAEW,CAAvC;AAA0C,IAAA,EAAE,EAAEA,CAA9C;AAAiD,IAAA,OAAO,EAAEL,KAAK,CAACM,QAAN,KAAmBF,MAA7E;AAAqF,IAAA,KAAK,EAAEA,MAA5F;AAAoG,IAAA,IAAI,EAAEJ,KAAK,CAACO,MAAhH;AAAwH,IAAA,IAAI,EAAEP,KAAK,CAACQ,IAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2IJ,MAA3I,CADF,CADD,CADH,CAFF,CADF;AAYD,CAhBD;;AAkBA,eAAeL,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Option from './Option'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  },\n  header: {\n    fontSize: 30,\n    paddingTop:20,\n  },\n  row: {\n    height: 80,\n    borderBottom: \"1px solid #ddd\",\n    fontSize: 20,\n    lineHeight:\"80px\"\n  },\n  label: {\n    verticalAlign: 'middle',\n  },\n  chevronRightIcon : {\n    float:'right',\n    verticalAlign: 'middle',\n    marginTop:24,\n    fontSize:40,\n  }\n}))\n\nconst FilterMobile = props => {\nconst classes = useStyles()\n\n\n  return (\n    <div className={classes.root}>\n      <h2 className={classes.header}>Filters</h2>\n      <form>\n        {props.options.map((option, i) => (\n          <div className={classes.row}>\n            <Option className={classes.label} key={i} id={i} checked={props.selected === option} value={option} name={props.filter} type={props.type}>{option}</Option>\n          </div>\n        ))}\n      </form>\n    </div>\n  )\n}\n\nexport default FilterMobile\n\n// <form onChange={(e) => handleChange(e)} className={classes.selectOptions}>\n//   {props.options.map((option, i) => (\n//     <div className={classes.row}>\n//       <Option key={i} id={i} checked={props.selected === option} value={option} name={props.filter} type={props.type}>{option}</Option>\n//     </div>\n//   ))}\n// </form>\n"]},"metadata":{},"sourceType":"module"}