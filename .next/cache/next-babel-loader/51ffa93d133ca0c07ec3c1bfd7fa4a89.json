{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Midbar.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    display: 'inline-block',\n    width: '500px',\n    background: \"white\",\n    boxShadow: '0 0 14px rgba(0,0,0,0.25), 0 0 6px rgba(0,0,0,0.22)',\n    zIndex: 10,\n    overflow: 'auto'\n  },\n  hide: {\n    display: \"none\"\n  },\n  closeButton: {\n    position: 'absolute',\n    right: 5,\n    top: 5,\n    color: \"grey\"\n  },\n  image: {\n    width: \"100px\",\n    height: \"100px\"\n  },\n  topImage: {\n    width: \"100%\",\n    height: \"200px\",\n    objectFit: \"cover\"\n  }\n});\n\nconst Midbar = props => {\n  const classes = useStyles();\n  return __jsx(Box, {\n    px: 4,\n    className: props.showMidbar ? classes.root : classes.hide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    src: '/therapist-images/' + props.therapist.image,\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), __jsx(Box, {\n    fontSize: \"24px\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, props.therapist.name, \" \", props.therapist.surname), __jsx(Box, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, props.therapist.title), __jsx(Box, {\n    pt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    display: \"inline-block\",\n    pr: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    href: \"mailto:\" + props.therapist.email,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Email\")), __jsx(Box, {\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    href: props.therapist.website,\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Website\")))), __jsx(Box, {\n    py: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"About\")), __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, props.therapist.about)), __jsx(Box, {\n    py: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Specialty Areas\")), __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, props.therapist.specialties)), __jsx(Box, {\n    py: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Treatment Approaches\")), __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, props.therapist.approaches)), __jsx(Box, {\n    py: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Payment\")), __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, props.therapist.payment)), __jsx(Box, {\n    py: 1.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    pb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Clients\")), __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, props.therapist.clients)), __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: () => props.setShowMidbar(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Midbar;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Midbar.js"],"names":["React","useEffect","makeStyles","Container","Box","Grid","Button","Chip","IconButton","Icon","CloseIcon","Typography","Avatar","Divider","Slide","useStyles","root","position","display","width","background","boxShadow","zIndex","overflow","hide","closeButton","right","top","color","image","height","topImage","objectFit","Midbar","props","classes","showMidbar","therapist","name","surname","title","email","website","about","specialties","approaches","payment","clients","setShowMidbar"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport Chip from '@material-ui/core/Chip'\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport Divider from '@material-ui/core/Divider'\nimport Slide from '@material-ui/core/Slide'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    display: 'inline-block',\n    width: '500px',\n    background: \"white\",\n    boxShadow: '0 0 14px rgba(0,0,0,0.25), 0 0 6px rgba(0,0,0,0.22)',\n    zIndex:10,\n    overflow: 'auto',\n  },\n  hide: {\n    display: \"none\",\n  },\n  closeButton: {\n   position: 'absolute',\n   right: 5,\n   top: 5,\n   color: \"grey\",\n },\n image: {\n   width: \"100px\",\n   height: \"100px\"\n },\n topImage: {\n   width: \"100%\",\n   height: \"200px\",\n   objectFit: \"cover\"\n },\n});\n\nconst Midbar = props => {\n  const classes = useStyles()\n\n  return (\n      <Box px={4} className={props.showMidbar ? classes.root : classes.hide}>\n\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Box mt={4}>\n            <Avatar src={'/therapist-images/' + props.therapist.image} className={classes.image}/>\n          </Box>\n\n          <Box fontSize=\"24px\" mt={2}>\n            {props.therapist.name} {props.therapist.surname}\n          </Box>\n\n          <Box color=\"textSecondary\">\n            {props.therapist.title}\n          </Box>\n\n          <Box pt={2} >\n            <Box display=\"inline-block\" pr={1}>\n              <Button href={\"mailto:\" + props.therapist.email} variant=\"contained\" color=\"secondary\">Email</Button>\n            </Box>\n            <Box display=\"inline-block\">\n              <Button href={props.therapist.website}  variant=\"contained\" color=\"secondary\">Website</Button>\n            </Box>\n          </Box>\n        </Box>\n\n        <Box py={1.5}>\n          <Box pb={1}>\n            <Typography variant=\"h5\">About</Typography>\n          </Box>\n          <Typography variant=\"body1\">\n            {props.therapist.about}\n          </Typography>\n        </Box>\n\n        <Box py={1.5}>\n          <Box pb={1}>\n            <Typography variant=\"h5\">Specialty Areas</Typography>\n          </Box>\n          <Typography variant=\"body1\">\n            {props.therapist.specialties}\n          </Typography>\n        </Box>\n\n        <Box py={1.5}>\n          <Box pb={1}>\n            <Typography variant=\"h5\">Treatment Approaches</Typography>\n          </Box>\n          <Typography variant=\"body1\">\n            {props.therapist.approaches}\n          </Typography>\n        </Box>\n\n        <Box py={1.5}>\n          <Box pb={1}>\n            <Typography variant=\"h5\">Payment</Typography>\n          </Box>\n          <Typography variant=\"body1\">\n            {props.therapist.payment}\n          </Typography>\n        </Box>\n\n        <Box py={1.5}>\n          <Box pb={1}>\n            <Typography variant=\"h5\">Clients</Typography>\n          </Box>\n          <Typography variant=\"body1\">\n            {props.therapist.clients}\n          </Typography>\n        </Box>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={() => props.setShowMidbar(false)}>\n          <CloseIcon />\n        </IconButton>\n      </Box>\n  )\n}\n\nexport default Midbar\n"]},"metadata":{},"sourceType":"module"}