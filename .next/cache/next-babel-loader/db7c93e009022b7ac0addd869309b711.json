{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Midbar.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    display: 'inline-block',\n    height: '100vh',\n    width: '500px',\n    background: \"#efe\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  closeButton: {\n    position: 'absolute',\n    right: 5,\n    top: 5,\n    color: \"grey\"\n  }\n});\nuseEffect(() => {}, [selectedTherapist]);\n\nconst Midbar = props => {\n  const classes = useStyles();\n\n  if (props.selectedTherapist) {\n    return __jsx(\"div\", {\n      className: props.showMidbar ? classes.root : classes.hide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: () => props.setShowMidbar(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), __jsx(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, props.selectedTherapist.name));\n  } else {\n    return __jsx(\"div\", {\n      className: props.showMidbar ? classes.root : classes.hide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: () => props.setShowMidbar(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default Midbar;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Midbar.js"],"names":["React","useEffect","makeStyles","IconButton","CloseIcon","Typography","useStyles","root","position","display","height","width","background","hide","closeButton","right","top","color","selectedTherapist","Midbar","props","classes","showMidbar","setShowMidbar","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,OAAO,EAAE,cAFL;AAGJC,IAAAA,MAAM,EAAE,OAHJ;AAIJC,IAAAA,KAAK,EAAE,OAJH;AAKJC,IAAAA,UAAU,EAAE;AALR,GADqB;AAQ3BC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,OAAO,EAAE;AADL,GARqB;AAW3BK,EAAAA,WAAW,EAAE;AACZN,IAAAA,QAAQ,EAAE,UADE;AAEZO,IAAAA,KAAK,EAAE,CAFK;AAGZC,IAAAA,GAAG,EAAE,CAHO;AAIZC,IAAAA,KAAK,EAAE;AAJK;AAXc,CAAD,CAA5B;AAmBAhB,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,CAACiB,iBAAD,CAFO,CAAT;;AAIA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,OAAO,GAAGf,SAAS,EAAzB;;AAEA,MAAIc,KAAK,CAACF,iBAAV,EAA6B;AAC3B,WACE;AAAK,MAAA,SAAS,EAAEE,KAAK,CAACE,UAAN,GAAmBD,OAAO,CAACd,IAA3B,GAAkCc,OAAO,CAACR,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,oBAAW,OAAvB;AAA+B,MAAA,SAAS,EAAEQ,OAAO,CAACP,WAAlD;AAA+D,MAAA,OAAO,EAAE,MAAMM,KAAK,CAACG,aAAN,CAAoB,KAApB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACF,iBAAN,CAAwBM,IAD3B,CAJF,CADF;AAUD,GAXD,MAaK;AACH,WACE;AAAK,MAAA,SAAS,EAAEJ,KAAK,CAACE,UAAN,GAAmBD,OAAO,CAACd,IAA3B,GAAkCc,OAAO,CAACR,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,oBAAW,OAAvB;AAA+B,MAAA,SAAS,EAAEQ,OAAO,CAACP,WAAlD;AAA+D,MAAA,OAAO,EAAE,MAAMM,KAAK,CAACG,aAAN,CAAoB,KAApB,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;AACF,CAzBD;;AA2BA,eAAeJ,MAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'relative',\n    display: 'inline-block',\n    height: '100vh',\n    width: '500px',\n    background: \"#efe\"\n  },\n  hide: {\n    display: \"none\",\n  },\n  closeButton: {\n   position: 'absolute',\n   right: 5,\n   top: 5,\n   color: \"grey\",\n },\n});\n\nuseEffect(() => {\n\n},[selectedTherapist])\n\nconst Midbar = props => {\n  const classes = useStyles()\n\n  if (props.selectedTherapist) {\n    return (\n      <div className={props.showMidbar ? classes.root : classes.hide}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={() => props.setShowMidbar(false)}>\n          <CloseIcon />\n        </IconButton>\n        <Typography>\n          {props.selectedTherapist.name}\n        </Typography>\n      </div>\n    )\n  }\n\n  else {\n    return (\n      <div className={props.showMidbar ? classes.root : classes.hide}>\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={() => props.setShowMidbar(false)}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n    )\n  }\n}\n\nexport default Midbar\n"]},"metadata":{},"sourceType":"module"}