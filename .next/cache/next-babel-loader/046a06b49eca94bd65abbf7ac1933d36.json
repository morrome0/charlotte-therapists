{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Filters.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport SelectMultiple from './SelectMultiple';\nimport Button from '@material-ui/core/Button';\nimport SelectOptions from './SelectOptions';\nimport Filter from './Filter';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: '#fff',\n      padding: \"0 15px 15px 180px\",\n      borderBottom: \"1px solid #ddd\",\n      position: 'relative'\n    },\n    filterIndicator: {\n      position: \"absolute\",\n      left: 40\n    },\n    filterIcon: {\n      verticalAlign: \"middle\",\n      color: \"#777\",\n      fontSize: 26,\n      marginRight: 10\n    },\n    active: {\n      color: theme.palette.primary.main\n    },\n    clear: {\n      color: theme.palette.error.main,\n      borderRadius: 20,\n      padding: \"2px 15px\"\n    }\n  };\n});\n\nvar anyActiveFilters = function anyActiveFilters(activeFilters) {\n  for (var key in activeFilters) {\n    if (activeFilters[key] != \"\") {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar Filters = function Filters(props) {\n  var classes = useStyles();\n  return __jsx(Box, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: \"\".concat(classes.filterIndicator, \" \").concat(anyActiveFilters(props.activeFilters) && classes.active, \" \"),\n    style: {\n      fontFamily: \"Raleway\",\n      fontWeight: \"bold\",\n      marginRight: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    className: \"\".concat(classes.filterIcon, \" \").concat(anyActiveFilters(props.activeFilters) && classes.active, \" \"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"filter_list\"), anyActiveFilters(props.activeFilters) ? \"FILTERS ON\" : \"FILTERS OFF\"), __jsx(Filter, {\n    activeFilter: props.activeFilters.clientTypes,\n    options: props.catalogue.clientTypes,\n    filter: \"clientTypes\",\n    onChange: props.onChange,\n    label: \"Client Type\",\n    type: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(Filter, {\n    activeFilter: props.activeFilters.specialties,\n    options: props.catalogue.specialties,\n    filter: \"specialties\",\n    onChange: props.onChange,\n    label: \"Specialty\",\n    type: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(Filter, {\n    activeFilter: props.activeFilters.specialties,\n    options: props.catalogue.specialties,\n    filter: \"specialties\",\n    onChange: props.onChange,\n    label: \"Specialty\",\n    type: \"radio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), anyActiveFilters(props.activeFilters) && __jsx(Button, {\n    size: \"small\",\n    onClick: props.clearFilters,\n    className: classes.clear,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 50\n    }\n  }, \"Clear All Filters \", __jsx(Icon, {\n    style: {\n      fontSize: 14,\n      marginLeft: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 144\n    }\n  }, \"close\")));\n};\n\nexport default Filters;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Filters.js"],"names":["useState","useEffect","makeStyles","Container","Box","SelectMultiple","Button","SelectOptions","Filter","Icon","IconButton","useStyles","theme","root","background","padding","borderBottom","position","filterIndicator","left","filterIcon","verticalAlign","color","fontSize","marginRight","active","palette","primary","main","clear","error","borderRadius","anyActiveFilters","activeFilters","key","Filters","props","classes","fontFamily","fontWeight","clientTypes","catalogue","onChange","specialties","clearFilters","marginLeft"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport SelectMultiple from './SelectMultiple'\nimport Button from '@material-ui/core/Button'\nimport SelectOptions from './SelectOptions'\nimport Filter from './Filter'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background:'#fff',\n    padding:\"0 15px 15px 180px\",\n    borderBottom: \"1px solid #ddd\",\n    position:'relative',\n  },\n  filterIndicator: {\n    position:\"absolute\",\n    left:40,\n  },\n  filterIcon: {\n    verticalAlign:\"middle\",\n    color:\"#777\",\n    fontSize:26,\n    marginRight:10,\n  },\n  active: {\n    color: theme.palette.primary.main,\n  },\n  clear: {\n    color: theme.palette.error.main,\n    borderRadius:20,\n    padding:\"2px 15px\"\n  }\n}));\n\nconst anyActiveFilters = activeFilters => {\n  for (let key in activeFilters) {\n    if (activeFilters[key] != \"\") {\n      return true\n    }\n  }\n  return false\n}\n\n\nconst Filters = props => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <span className={`${classes.filterIndicator} ${anyActiveFilters(props.activeFilters) && classes.active} `} style={{fontFamily:\"Raleway\", fontWeight:\"bold\",marginRight:20}}>\n        <Icon className={`${classes.filterIcon} ${anyActiveFilters(props.activeFilters) && classes.active} `}>filter_list</Icon>\n        {anyActiveFilters(props.activeFilters) ? \"FILTERS ON\" : \"FILTERS OFF\"}\n      </span>\n      <Filter activeFilter={props.activeFilters.clientTypes} options={props.catalogue.clientTypes} filter=\"clientTypes\" onChange={props.onChange} label=\"Client Type\" type=\"radio\"/>\n      <Filter activeFilter={props.activeFilters.specialties} options={props.catalogue.specialties} filter=\"specialties\" onChange={props.onChange} label=\"Specialty\" type=\"radio\"/>\n      <Filter activeFilter={props.activeFilters.specialties} options={props.catalogue.specialties} filter=\"specialties\" onChange={props.onChange} label=\"Specialty\" type=\"radio\"/>\n      { anyActiveFilters(props.activeFilters) && <Button size=\"small\" onClick={props.clearFilters} className={classes.clear}>Clear All Filters <Icon style={{fontSize: 14, marginLeft: 8}}>close</Icon></Button>}\n\n    </Box>\n  )\n}\n\nexport default Filters\n"]},"metadata":{},"sourceType":"module"}