{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/SelectOptions.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Option from './Option';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    selectOptions: {\n      minWidth: 200,\n      background: '#fff',\n      borderRadius: 4,\n      border: \"1px solid #ddd\",\n      boxShadow: '0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15)',\n      position: 'absolute',\n      top: 32,\n      zIndex: 1000,\n      fontFamily: 'raleway',\n      fontSize: 13,\n      fontWeight: '500'\n    }\n  };\n});\n\nvar Select = function Select(props) {\n  var classes = useStyles();\n  var node = useRef();\n  useEffect(function () {\n    document.addEventListener(\"mousedown\", handleClick);\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, []);\n\n  var handleClick = function handleClick(e) {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n\n    props.handleClose();\n  };\n\n  var handleChange = function handleChange(e) {\n    props.onChange(props.filter, e.target.value);\n    props.handleClose();\n  };\n\n  return __jsx(\"form\", {\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    ref: node,\n    className: classes.selectOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, props.options.map(function (option, i) {\n    return __jsx(Option, {\n      key: i,\n      id: i,\n      checked: props.selected === option,\n      value: option,\n      name: props.filter,\n      type: props.type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, option);\n  }));\n};\n\nexport default Select;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/SelectOptions.js"],"names":["useState","useEffect","useRef","makeStyles","Box","Option","useStyles","theme","selectOptions","minWidth","background","borderRadius","border","boxShadow","position","top","zIndex","fontFamily","fontSize","fontWeight","Select","props","classes","node","document","addEventListener","handleClick","removeEventListener","e","current","contains","target","handleClose","handleChange","onChange","filter","value","options","map","option","i","selected","type"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAAAI,KAAK;AAAA,SAAK;AACrCC,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE,GADG;AAEbC,MAAAA,UAAU,EAAC,MAFE;AAGbC,MAAAA,YAAY,EAAC,CAHA;AAIbC,MAAAA,MAAM,EAAE,gBAJK;AAKbC,MAAAA,SAAS,EAAE,gEALE;AAMbC,MAAAA,QAAQ,EAAC,UANI;AAObC,MAAAA,GAAG,EAAC,EAPS;AAQbC,MAAAA,MAAM,EAAC,IARM;AASbC,MAAAA,UAAU,EAAC,SATE;AAUbC,MAAAA,QAAQ,EAAC,EAVI;AAWbC,MAAAA,UAAU,EAAC;AAXE;AADsB,GAAL;AAAA,CAAN,CAA5B;;AAiBA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,MAAMiB,IAAI,GAAGrB,MAAM,EAAnB;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACduB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCC,WAAvC;AAEA,WAAO,YAAM;AACXF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0CD,WAA1C;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAE,CAAC,EAAI;AACvB,QAAIL,IAAI,CAACM,OAAL,CAAaC,QAAb,CAAsBF,CAAC,CAACG,MAAxB,CAAJ,EAAqC;AACrC;AACC;;AACDV,IAAAA,KAAK,CAACW,WAAN;AACD,GALD;;AAOA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAL,CAAC,EAAI;AACxBP,IAAAA,KAAK,CAACa,QAAN,CAAeb,KAAK,CAACc,MAArB,EAA6BP,CAAC,CAACG,MAAF,CAASK,KAAtC;AACAf,IAAAA,KAAK,CAACW,WAAN;AACD,GAHD;;AAKA,SACE;AAAM,IAAA,QAAQ,EAAE,kBAACJ,CAAD;AAAA,aAAOK,YAAY,CAACL,CAAD,CAAnB;AAAA,KAAhB;AAAwC,IAAA,GAAG,EAAEL,IAA7C;AAAmD,IAAA,SAAS,EAAED,OAAO,CAACd,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,KAAK,CAACgB,OAAN,CAAcC,GAAd,CAAkB,UAACC,MAAD,EAASC,CAAT;AAAA,WACjB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,EAAE,EAAEA,CAApB;AAAuB,MAAA,OAAO,EAAEnB,KAAK,CAACoB,QAAN,KAAmBF,MAAnD;AAA2D,MAAA,KAAK,EAAEA,MAAlE;AAA0E,MAAA,IAAI,EAAElB,KAAK,CAACc,MAAtF;AAA8F,MAAA,IAAI,EAAEd,KAAK,CAACqB,IAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiHH,MAAjH,CADiB;AAAA,GAAlB,CADH,CADF;AAOD,CA/BD;;AAiCA,eAAenB,MAAf","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\nimport Option from './Option'\n\nconst useStyles = makeStyles(theme => ({\n  selectOptions: {\n    minWidth: 200,\n    background:'#fff',\n    borderRadius:4,\n    border: \"1px solid #ddd\",\n    boxShadow: '0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.15)',\n    position:'absolute',\n    top:32,\n    zIndex:1000,\n    fontFamily:'raleway',\n    fontSize:13,\n    fontWeight:'500'\n  },\n}));\n\n\nconst Select = props => {\n  const classes = useStyles()\n  const node = useRef()\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick)\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick)\n    }\n  }, [])\n\n  const handleClick = e => {\n    if (node.current.contains(e.target)) {\n    return;\n    }\n    props.handleClose()\n  }\n\n  const handleChange = e => {\n    props.onChange(props.filter, e.target.value)\n    props.handleClose()\n  }\n\n  return (\n    <form onChange={(e) => handleChange(e)} ref={node} className={classes.selectOptions}>\n      {props.options.map((option, i) => (\n        <Option key={i} id={i} checked={props.selected === option} value={option} name={props.filter} type={props.type}>{option}</Option>\n      ))}\n    </form>\n  )\n}\n\nexport default Select\n"]},"metadata":{},"sourceType":"module"}