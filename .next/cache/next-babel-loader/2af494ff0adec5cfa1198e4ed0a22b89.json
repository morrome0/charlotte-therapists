{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Filters.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport SingleSelect from './SingleSelect';\nimport SelectMultiple from './SelectMultiple';\nimport Button from '@material-ui/core/Button';\nimport SelectOptions from './SelectOptions';\nimport Filter from './Filter';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background: '#fff',\n    padding: \"0 15px 15px\",\n    borderBottom: \"1px solid #ddd\",\n    position: 'relative'\n  },\n  filterButton: {\n    height: 40,\n    width: 40,\n    margin: \"0 10px\"\n  },\n  filterIcon: {\n    verticalAlign: \"middle\",\n    color: \"#777\",\n    fontSize: 26\n  },\n  active: {\n    color: \"blue\"\n  }\n}));\n\nconst anyActiveFilters = activeFilters => {\n  for (let key in activeFilters) {\n    console.log(key + ': ' + key[value]);\n\n    if (activeFilters[key] != \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nconst Filters = props => {\n  const classes = useStyles();\n  return __jsx(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    className: classes.filterButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    className: `${classes.filterIcon} ${anyActiveFilters(props.activeFilters) && classes.active} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 52\n    }\n  }, \"filter_list\")), __jsx(Filter, {\n    activeFilter: props.activeFilters.clientTypes,\n    options: props.catalogue.clientTypes,\n    showOptions: props.showOptions,\n    visible: props.visibleOptions === \"clientTypes\",\n    filter: \"clientTypes\",\n    onChange: props.onChange,\n    label: \"Client Type\",\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), __jsx(Filter, {\n    activeFilter: props.activeFilters.specialties,\n    options: props.catalogue.specialties,\n    showOptions: props.showOptions,\n    visible: props.visibleOptions === \"specialties\",\n    filter: \"specialties\",\n    onChange: props.onChange,\n    label: \"Specialty\",\n    type: \"radio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Filters;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Filters.js"],"names":["useState","useEffect","makeStyles","Container","Box","SingleSelect","SelectMultiple","Button","SelectOptions","Filter","Icon","IconButton","useStyles","theme","root","background","padding","borderBottom","position","filterButton","height","width","margin","filterIcon","verticalAlign","color","fontSize","active","anyActiveFilters","activeFilters","key","console","log","value","Filters","props","classes","clientTypes","catalogue","showOptions","visibleOptions","onChange","specialties"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport SingleSelect from './SingleSelect'\nimport SelectMultiple from './SelectMultiple'\nimport Button from '@material-ui/core/Button'\nimport SelectOptions from './SelectOptions'\nimport Filter from './Filter'\nimport Icon from '@material-ui/core/Icon'\nimport IconButton from '@material-ui/core/IconButton'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    background:'#fff',\n    padding:\"0 15px 15px\",\n    borderBottom: \"1px solid #ddd\",\n    position:'relative',\n  },\n  filterButton: {\n    height:40,\n    width:40,\n    margin:\"0 10px\",\n  },\n  filterIcon: {\n    verticalAlign:\"middle\",\n    color:\"#777\",\n    fontSize:26,\n  },\n  active: {\n    color: \"blue\",\n  }\n}));\n\nconst anyActiveFilters = activeFilters => {\n  for (let key in activeFilters) {\n    console.log(key + ': ' + key[value])\n    if (activeFilters[key] != \"\") {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n\n\nconst Filters = props => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.root}>\n      <IconButton className={classes.filterButton}><Icon className={`${classes.filterIcon} ${anyActiveFilters(props.activeFilters) && classes.active} `}>filter_list</Icon></IconButton>\n      <Filter activeFilter={props.activeFilters.clientTypes} options={props.catalogue.clientTypes} showOptions={props.showOptions} visible={(props.visibleOptions === \"clientTypes\")} filter=\"clientTypes\" onChange={props.onChange} label=\"Client Type\" type=\"radio\"/>\n      <Filter activeFilter={props.activeFilters.specialties} options={props.catalogue.specialties} showOptions={props.showOptions} visible={(props.visibleOptions === \"specialties\")} filter=\"specialties\" onChange={props.onChange} label=\"Specialty\" type=\"radio\"/>\n  </Box>\n  )\n}\n\nexport default Filters\n"]},"metadata":{},"sourceType":"module"}