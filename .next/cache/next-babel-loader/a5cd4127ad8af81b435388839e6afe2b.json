{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Listings from '../components/Listings';\nimport Listing from '../components/Listing';\nimport NavBar from '../components/NavBar';\nimport Box from '@material-ui/core/Box';\nimport Map from '../components/Map';\nimport Midbar from '../components/Midbar';\nconst useStyles = makeStyles({\n  main: {\n    display: \"flex\",\n    height: \"calc(100vh - 60px)\",\n    overflow: \"hidden\"\n  },\n  mapbox: {\n    flexgrow: 1\n  }\n});\n\nconst App = props => {\n  const classes = useStyles();\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(null);\n  const {\n    0: selectedTherapist,\n    1: setSelectedTherapist\n  } = useState(props.therapists[0]);\n  const {\n    0: showMidbar,\n    1: setShowMidbar\n  } = useState(true);\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find(therapist => therapist.id == selected);\n  };\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n  }, [selected]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Listings, {\n    therapists: props.therapists,\n    catalogue: props.catalogue,\n    selected: selected,\n    setSelected: setSelected,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(Midbar, {\n    therapist: selectedTherapist,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    display: {\n      xs: 'none',\n      sm: 'block'\n    },\n    style: {\n      flexGrow: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 73\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/app.js"],"names":["useState","useEffect","makeStyles","Listings","Listing","NavBar","Box","Map","Midbar","useStyles","main","display","height","overflow","mapbox","flexgrow","App","props","classes","selected","setSelected","selectedTherapist","setSelectedTherapist","therapists","showMidbar","setShowMidbar","getSelectedTherapist","find","therapist","id","root","catalogue","xs","sm","flexGrow"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAAC;AAC3BQ,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAC,MADJ;AAEJC,IAAAA,MAAM,EAAC,oBAFH;AAGJC,IAAAA,QAAQ,EAAC;AAHL,GADqB;AAM3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAC;AADH;AANmB,CAAD,CAA5B;;AAWA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAA0BpB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACqB,iBAAD;AAAA,OAAoBC;AAApB,MAA4CtB,QAAQ,CAACiB,KAAK,CAACM,UAAN,CAAiB,CAAjB,CAAD,CAA1D;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BzB,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAM0B,oBAAoB,GAAG,MAAM;AACjC,WAAOT,KAAK,CAACM,UAAN,CAAiBI,IAAjB,CAAuBC,SAAD,IAAeA,SAAS,CAACC,EAAV,IAAgBV,QAArD,CAAP;AACD,GAFD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,QAAJ,EAAcG,oBAAoB,CAACI,oBAAoB,EAArB,CAApB;AACf,GAFQ,EAEN,CAACP,QAAD,CAFM,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEO,KAAK,CAACM,UAA5B;AAAwC,IAAA,SAAS,EAAEN,KAAK,CAACc,SAAzD;AAAoE,IAAA,QAAQ,EAAGZ,QAA/E;AAAyF,IAAA,WAAW,EAAEC,WAAtG;AAAoH,IAAA,UAAU,EAAEI,UAAhI;AAA4I,IAAA,aAAa,EAAEC,aAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,iBAAnB;AAAsC,IAAA,UAAU,EAAEG,UAAlD;AAA8D,IAAA,aAAa,EAAEC,aAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAE;AAACO,MAAAA,EAAE,EAAE,MAAL;AAAaC,MAAAA,EAAE,EAAC;AAAhB,KAAd;AAAwC,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgE,MAAC,GAAD;AAAK,IAAA,UAAU,EAAEjB,KAAK,CAACM,UAAvB;AAAmC,IAAA,QAAQ,EAAGJ,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhE,CAHF,CAHF,CADF;AAWD,CA3BD;;AA6BA,eAAeH,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Listings from '../components/Listings'\nimport Listing from '../components/Listing'\nimport NavBar from '../components/NavBar'\nimport Box from '@material-ui/core/Box'\nimport Map from '../components/Map'\nimport Midbar from '../components/Midbar'\n\n\nconst useStyles = makeStyles({\n  main: {\n    display:\"flex\",\n    height:\"calc(100vh - 60px)\",\n    overflow:\"hidden\"\n  },\n  mapbox: {\n    flexgrow:1\n  }\n});\n\nconst App = props => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[0])\n  const [showMidbar, setShowMidbar] = useState(true)\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n  }, [selected])\n\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n\n      <Box className={classes.main}>\n        <Listings therapists={props.therapists} catalogue={props.catalogue} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Box display={{xs: 'none', sm:'block'}} style={{flexGrow: '1'}}><Map therapists={props.therapists} selected= {selected}/></Box>\n      </Box>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}