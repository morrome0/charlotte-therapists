{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Listings.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport FilterBar from '../components/FilterBar';\nimport Filters from '../components/Filters';\nimport Listing from \"./Listing\";\nvar useStyles = makeStyles(function (theme) {\n  var _root;\n\n  return {\n    root: (_root = {}, _defineProperty(_root, theme.breakpoints.up('sm'), {\n      width: \"650px\"\n    }), _defineProperty(_root, \"width\", \"100%\"), _defineProperty(_root, \"background\", \"#F6F9FC\"), _defineProperty(_root, \"display\", 'inline-block'), _defineProperty(_root, \"zIndex\", 100), _defineProperty(_root, \"boxShadow\", '1px 4px 6px -1px rgba(0, 0, 0, 0.1), 1px 2px 4px -1px rgba(0, 0, 0, 0.06)'), _defineProperty(_root, \"overflow\", 'scroll'), _defineProperty(_root, \"position\", 'relative'), _root),\n    listingsContainer: {}\n  };\n});\n\nvar Listings = function Listings(props) {\n  var classes = useStyles();\n  var therapists;\n\n  var _useState = useState({\n    clientType: \"individuals\"\n  }),\n      filters = _useState[0],\n      setFilters = _useState[1];\n\n  var applyFilters = function applyFilters(event) {\n    therapists = props.therapists.filter(function (therapist) {\n      return therapist.clientTypes.includes(event.target.value);\n    });\n  };\n\n  return __jsx(Box, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(Filters, {\n    therapists: props.therapists,\n    catalogue: props.catalogue,\n    onChange: applyFilters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(Container, {\n    className: classes.listingsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, therapists.map(function (therapist) {\n    return __jsx(Listing, {\n      key: therapist.id,\n      id: therapist.id,\n      therapist: therapist,\n      selected: props.selected,\n      setSelected: props.setSelected,\n      showMidbar: props.showMidbar,\n      setShowMidbar: props.setShowMidbar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\nexport default Listings;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Listings.js"],"names":["React","useState","useEffect","makeStyles","Container","Box","Grid","Icon","Typography","FilterBar","Filters","Listing","useStyles","theme","root","breakpoints","up","width","listingsContainer","Listings","props","classes","therapists","clientType","filters","setFilters","applyFilters","event","filter","therapist","clientTypes","includes","target","value","catalogue","map","id","selected","setSelected","showMidbar","setShowMidbar"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAAAU,KAAK;AAAA;;AAAA,SAAK;AACrCC,IAAAA,IAAI,sCACDD,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CADC,EAC4B;AAC5BC,MAAAA,KAAK,EAAE;AADqB,KAD5B,mCAIK,MAJL,wCAKU,SALV,qCAMO,cANP,oCAOK,GAPL,uCAQS,2EART,sCASQ,QATR,sCAUQ,UAVR,SADiC;AAarCC,IAAAA,iBAAiB,EAAE;AAbkB,GAAL;AAAA,CAAN,CAA5B;;AAkBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,MAAIU,UAAJ;;AAFwB,kBAIMrB,QAAQ,CAAC;AACrCsB,IAAAA,UAAU,EAAE;AADyB,GAAD,CAJd;AAAA,MAIjBC,OAJiB;AAAA,MAIRC,UAJQ;;AASxB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC5BL,IAAAA,UAAU,GAAGF,KAAK,CAACE,UAAN,CAAiBM,MAAjB,CAAwB,UAAAC,SAAS;AAAA,aAC5CA,SAAS,CAACC,WAAV,CAAsBC,QAAtB,CAA+BJ,KAAK,CAACK,MAAN,CAAaC,KAA5C,CAD4C;AAAA,KAAjC,CAAb;AAGD,GAJD;;AAMA,SACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACP,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,UAAU,EAAEM,KAAK,CAACE,UAA3B;AAAuC,IAAA,SAAS,EAAEF,KAAK,CAACc,SAAxD;AAAmE,IAAA,QAAQ,EAAER,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,OAAO,CAACH,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,UAAU,CAACa,GAAX,CAAe,UAAAN,SAAS;AAAA,WACrB,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,SAAS,CAACO,EAAxB;AAA4B,MAAA,EAAE,EAAEP,SAAS,CAACO,EAA1C;AAA8C,MAAA,SAAS,EAAEP,SAAzD;AAAoE,MAAA,QAAQ,EAAGT,KAAK,CAACiB,QAArF;AAA+F,MAAA,WAAW,EAAEjB,KAAK,CAACkB,WAAlH;AAA+H,MAAA,UAAU,EAAElB,KAAK,CAACmB,UAAjJ;AAA6J,MAAA,aAAa,EAAEnB,KAAK,CAACoB,aAAlL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADqB;AAAA,GAAxB,CADH,CAFF,CADJ;AAUD,CAzBD;;AA4BA,eAAerB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography'\nimport FilterBar from '../components/FilterBar'\nimport Filters from '../components/Filters'\nimport Listing from \"./Listing\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    [theme.breakpoints.up('sm')]: {\n      width: \"650px\",\n    },\n    width: \"100%\",\n    background: \"#F6F9FC\",\n    display: 'inline-block',\n    zIndex:100,\n    boxShadow: '1px 4px 6px -1px rgba(0, 0, 0, 0.1), 1px 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    overflow: 'scroll',\n    position: 'relative',\n  },\n  listingsContainer: {\n\n  }\n}));\n\nconst Listings = props => {\n  const classes = useStyles()\n  let therapists\n\n  const [filters, setFilters] = useState({\n    clientType: \"individuals\",\n  });\n\n\n  const applyFilters = event => {\n    therapists = props.therapists.filter(therapist => (\n      therapist.clientTypes.includes(event.target.value)\n    ))\n  }\n\n  return (\n      <Box className={classes.root}>\n        <Filters therapists={props.therapists} catalogue={props.catalogue} onChange={applyFilters}/>\n        <Container className={classes.listingsContainer}>\n          {therapists.map(therapist => (\n              <Listing key={therapist.id} id={therapist.id} therapist={therapist} selected= {props.selected} setSelected={props.setSelected} showMidbar={props.showMidbar} setShowMidbar={props.setShowMidbar}/>\n          ))}\n        </Container>\n      </Box>\n  )\n}\n\n\nexport default Listings\n"]},"metadata":{},"sourceType":"module"}