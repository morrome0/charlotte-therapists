{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Map.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Marker from './Marker';\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  }\n});\n\nconst Map = props => {\n  const classes = useStyles();\n  const {\n    0: map,\n    1: setMap\n  } = useState({});\n  const mapRef = useRef(null);\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: {\n        lat: 35.2271,\n        lng: -80.8431\n      },\n      zoom: 12\n    });\n    setMap(map);\n  };\n\n  useEffect(() => {\n    initMap();\n    return () => {};\n  }, [props.selected]);\n  return __jsx(\"div\", {\n    ref: mapRef,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Marker, {\n    map: map,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Map; // const markers = []\n// props.therapists.forEach((therapist) => {\n//   if (therapist.location) {\n//     let marker = new google.maps.Marker({position: therapist.location , map: map})\n//     if (therapist.id == props.selected)  marker.setAnimation(google.maps.Animation.BOUNCE)\n//     markers.push(marker)\n//   }\n// })\n// setMarkers(markers)","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Map.js"],"names":["React","useEffect","useRef","useState","makeStyles","Marker","useStyles","root","display","height","width","Map","props","classes","map","setMap","mapRef","initMap","google","maps","current","center","lat","lng","zoom","selected"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,cADL;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,KAAK,EAAE;AAHH;AADqB,CAAD,CAA5B;;AAQA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM;AAAA,OAAEQ,GAAF;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMa,MAAM,GAAGd,MAAM,CAAC,IAAD,CAArB;;AAEA,QAAMe,OAAO,GAAG,MAAM;AACpB,UAAMH,GAAG,GAAG,IAAII,MAAM,CAACC,IAAP,CAAYR,GAAhB,CAAoBK,MAAM,CAACI,OAA3B,EAAoC;AAC9CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,OAAP;AAAgBC,QAAAA,GAAG,EAAE,CAAC;AAAtB,OADsC;AAE9CC,MAAAA,IAAI,EAAE;AAFwC,KAApC,CAAZ;AAIAT,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO;AAEP,WAAO,MAAM,CACZ,CADD;AAED,GALQ,EAKN,CAACL,KAAK,CAACa,QAAP,CALM,CAAT;AAOA,SACE;AAAK,IAAA,GAAG,EAAET,MAAV;AAAkB,IAAA,SAAS,EAAEH,OAAO,CAACN,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAGO,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAzBD;;AA2BA,eAAeH,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Marker from './Marker'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  },\n});\n\nconst Map = props => {\n  const classes = useStyles()\n  const [ map, setMap ] = useState({})\n  const mapRef = useRef(null)\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: { lat: 35.2271, lng: -80.8431 },\n      zoom: 12\n    });\n    setMap(map)\n  }\n\n  useEffect(() => {\n    initMap()\n\n    return () => {\n    }\n  }, [props.selected])\n\n  return (\n    <div ref={mapRef} className={classes.root}>\n      <Marker map= {map}/>\n    </div>\n  )\n}\n\nexport default Map\n\n// const markers = []\n// props.therapists.forEach((therapist) => {\n//   if (therapist.location) {\n//     let marker = new google.maps.Marker({position: therapist.location , map: map})\n//     if (therapist.id == props.selected)  marker.setAnimation(google.maps.Animation.BOUNCE)\n//     markers.push(marker)\n//   }\n// })\n// setMarkers(markers)\n"]},"metadata":{},"sourceType":"module"}