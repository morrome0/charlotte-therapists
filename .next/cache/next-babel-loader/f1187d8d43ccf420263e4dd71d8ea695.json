{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/mobile/Option.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    option: {\n      cursor: \"pointer\",\n      display: \"block\"\n    },\n    selected: {\n      color: \"#4d8ac7\"\n    },\n    label: {\n      paddingLeft: 20\n    }\n  };\n});\n\nvar Option = function Option(props) {\n  var classes = useStyles();\n  return __jsx(\"label\", {\n    className: \"\".concat(classes.option, \" \").concat(props.checked && classes.selected),\n    name: props.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    checked: props.checked,\n    type: props.type,\n    value: props.value,\n    name: props.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"span\", {\n    className: classes.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, props.children));\n};\n\nexport default Option;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/mobile/Option.js"],"names":["makeStyles","Box","useStyles","theme","option","cursor","display","selected","color","label","paddingLeft","Option","props","classes","checked","name","type","value","children"],"mappings":";;;;;AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAAAG,KAAK;AAAA,SAAK;AACrCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,SADF;AAENC,MAAAA,OAAO,EAAC;AAFF,KAD6B;AAKrCC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE;AADC,KAL2B;AAQrCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAC;AADP;AAR8B,GAAL;AAAA,CAAN,CAA5B;;AAaA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,SACE;AAAO,IAAA,SAAS,YAAKW,OAAO,CAACT,MAAb,cAAuBQ,KAAK,CAACE,OAAN,IAAiBD,OAAO,CAACN,QAAhD,CAAhB;AAA4E,IAAA,IAAI,EAAEK,KAAK,CAACG,IAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEH,KAAK,CAACE,OAAtB;AAA+B,IAAA,IAAI,EAAEF,KAAK,CAACI,IAA3C;AAAiD,IAAA,KAAK,EAAEJ,KAAK,CAACK,KAA9D;AAAqE,IAAA,IAAI,EAAEL,KAAK,CAACG,IAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAEF,OAAO,CAACJ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCG,KAAK,CAACM,QAAvC,CAFF,CADF;AAMD,CATD;;AAWA,eAAeP,MAAf","sourcesContent":["import { makeStyles } from '@material-ui/core'\nimport Box from '@material-ui/core/Box'\n\nconst useStyles = makeStyles(theme => ({\n  option: {\n    cursor: \"pointer\",\n    display:\"block\",\n  },\n  selected: {\n    color: \"#4d8ac7\",\n  },\n  label: {\n    paddingLeft:20,\n  }\n}));\n\nconst Option = props => {\n  const classes = useStyles()\n\n  return (\n    <label className={`${classes.option} ${props.checked && classes.selected}`} name={props.name}>\n      <input checked={props.checked} type={props.type} value={props.value} name={props.name} />\n      <span className={classes.label}>{props.children}</span>\n    </label>\n  )\n}\n\nexport default Option\n"]},"metadata":{},"sourceType":"module"}