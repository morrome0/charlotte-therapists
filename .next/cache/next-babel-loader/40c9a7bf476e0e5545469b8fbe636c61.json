{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Listings from '../components/Listings';\nimport Listing from '../components/Listing';\nimport NavBar from '../components/NavBar';\nimport Box from '@material-ui/core/Box';\nimport Map from '../components/Map';\nimport Midbar from '../components/Midbar';\nimport Filters from './Filters';\nvar useStyles = makeStyles({\n  root: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    display: \"flex\",\n    height: '100%',\n    overflow: \"hidden\"\n  },\n  mapbox: {\n    flexgrow: 1\n  }\n});\n\nvar App = function App(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var _useState2 = useState(props.therapists[0]),\n      selectedTherapist = _useState2[0],\n      setSelectedTherapist = _useState2[1];\n\n  var _useState3 = useState(true),\n      showMidbar = _useState3[0],\n      setShowMidbar = _useState3[1];\n\n  var _useState4 = useState(defaultFilters),\n      filters = _useState4[0],\n      setFilters = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      visibleOptions = _useState5[0],\n      setVisibleOptions = _useState5[1];\n\n  var defaultFilters = {\n    clientTypes: \"\",\n    specialties: \"\"\n  };\n\n  var getSelectedTherapist = function getSelectedTherapist() {\n    return props.therapists.find(function (therapist) {\n      return therapist.id == selected;\n    });\n  };\n\n  useEffect(function () {\n    if (selected) setSelectedTherapist(getSelectedTherapist());\n  }, [selected]);\n\n  var changeFilters = function changeFilters(filter, value) {\n    console.log(filter);\n    setFilters(_objectSpread({}, filters, _defineProperty({}, filter, value)));\n  };\n\n  var therapists = props.therapists.filter(function (therapist) {\n    return (filters.clientTypes ? therapist.clientTypes.includes(filters.clientTypes) : therapist) && (filters.specialties ? therapist.specialties.includes(filters.specialties) : therapist);\n  });\n\n  var showOptions = function showOptions(filter) {\n    setVisibleOptions(filter);\n  };\n\n  var hideOptions = function hideOptions(filter) {\n    setVisibleOptions(\"\");\n  };\n\n  var clearFilters = function clearFilters() {\n    setFilters(defaultFilters);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    onClick: visibleOptions && hideOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(Filters, {\n    onChange: changeFilters,\n    activeFilters: filters,\n    catalogue: props.catalogue,\n    visibleOptions: visibleOptions,\n    showOptions: showOptions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(Box, {\n    className: classes.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Listings, {\n    therapists: therapists,\n    selected: selected,\n    setSelected: setSelected,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(Midbar, {\n    therapist: selectedTherapist,\n    showMidbar: showMidbar,\n    setShowMidbar: setShowMidbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    display: {\n      xs: 'none',\n      sm: 'block'\n    },\n    style: {\n      flexGrow: '1'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(Map, {\n    therapists: props.therapists,\n    selected: selected,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 73\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/app.js"],"names":["useState","useEffect","makeStyles","Listings","Listing","NavBar","Box","Map","Midbar","Filters","useStyles","root","height","display","flexDirection","main","overflow","mapbox","flexgrow","App","props","classes","selected","setSelected","therapists","selectedTherapist","setSelectedTherapist","showMidbar","setShowMidbar","defaultFilters","filters","setFilters","visibleOptions","setVisibleOptions","clientTypes","specialties","getSelectedTherapist","find","therapist","id","changeFilters","filter","value","console","log","includes","showOptions","hideOptions","clearFilters","catalogue","xs","sm","flexGrow"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Listings from '../components/Listings'\nimport Listing from '../components/Listing'\nimport NavBar from '../components/NavBar'\nimport Box from '@material-ui/core/Box'\nimport Map from '../components/Map'\nimport Midbar from '../components/Midbar'\nimport Filters from './Filters'\n\n\nconst useStyles = makeStyles({\n  root: {\n    height:'100vh',\n    display:'flex',\n    flexDirection: 'column'\n  },\n  main: {\n    display:\"flex\",\n    height:'100%',\n    overflow:\"hidden\"\n  },\n  mapbox: {\n    flexgrow:1\n  }\n});\n\nconst App = props => {\n  const classes = useStyles()\n  const [selected, setSelected] = useState(null)\n  const [selectedTherapist, setSelectedTherapist] = useState(props.therapists[0])\n  const [showMidbar, setShowMidbar] = useState(true)\n  const [filters, setFilters] = useState(defaultFilters)\n  const [visibleOptions, setVisibleOptions] = useState(\"\")\n\n  const defaultFilters = {\n    clientTypes: \"\",\n    specialties: \"\",\n  }\n\n  const getSelectedTherapist = () => {\n    return props.therapists.find((therapist) => therapist.id == selected)\n  }\n\n  useEffect(() => {\n    if (selected) setSelectedTherapist(getSelectedTherapist())\n  }, [selected])\n\n\n  const changeFilters = (filter, value) => {\n    console.log(filter)\n    setFilters({\n      ...filters,\n      [filter]: value\n    })\n  }\n\n  const therapists = props.therapists.filter(function (therapist) {\n    return (\n      (filters.clientTypes ? therapist.clientTypes.includes(filters.clientTypes) : therapist) &&\n      (filters.specialties ? therapist.specialties.includes(filters.specialties) : therapist)\n    )\n  })\n\n  const showOptions = filter => {\n    setVisibleOptions(filter)\n  }\n\n  const hideOptions = filter => {\n    setVisibleOptions(\"\")\n  }\n\n  const clearFilters = () => {\n    setFilters(defaultFilters)\n  }\n\n  return (\n    <div className={classes.root} onClick={visibleOptions && hideOptions}>\n      <NavBar />\n      <Filters onChange={changeFilters} activeFilters={filters} catalogue={props.catalogue} visibleOptions={visibleOptions} showOptions={showOptions}/>\n      <Box className={classes.main}>\n        <Listings therapists={therapists} selected= {selected} setSelected={setSelected}  showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Midbar therapist={selectedTherapist} showMidbar={showMidbar} setShowMidbar={setShowMidbar}/>\n        <Box display={{xs: 'none', sm:'block'}} style={{flexGrow: '1'}}><Map therapists={props.therapists} selected= {selected}/></Box>\n      </Box>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}