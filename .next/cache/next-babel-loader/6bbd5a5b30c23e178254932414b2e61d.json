{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/FilterBar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: 70,\n    background: \"transparent\",\n    padding: 15\n  },\n  filter: {\n    marginRight: 15,\n    position: 'relative',\n    height: 'auto'\n  },\n  popover: {\n    position: 'absolute',\n    bottom: -115,\n    width: 300,\n    height: 100,\n    zIndex: 2000,\n    background: \"#fff\",\n    overflow: 'visible',\n    borderRadius: 12,\n    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    border: '1px solid #eee',\n    '&::after': {\n      borderWidth: 10,\n      marginLeft: -30,\n      bottom: '100%',\n      left: 60,\n      content: '\" \"',\n      height: 0,\n      width: 0,\n      position: 'absolute',\n      pointerEvents: 'none',\n      borderBottomColor: '#fff',\n      border: 'solid transparent'\n    },\n    '&::before': {\n      borderWidth: 12,\n      marginLeft: -30,\n      bottom: '100%',\n      left: 58,\n      content: '\" \"',\n      height: 0,\n      width: 0,\n      position: 'absolute',\n      pointerEvents: 'none',\n      borderBottomColor: '#eee',\n      border: 'solid transparent'\n    }\n  }\n}));\n\nconst FilterBar = props => {\n  const classes = useStyles();\n  const {\n    0: openFilter,\n    1: setOpenFilter\n  } = useState(null);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    A: false,\n    B: false,\n    C: false,\n    D: false\n  });\n  return __jsx(Box, {\n    className: classes.root,\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    className: classes.filter,\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => setOpenFilter(1),\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Client Type: All\", __jsx(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 105\n    }\n  }, \"expand_more\")), openFilter === 1 && __jsx(Box, {\n    className: classes.popover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Checkbox, {\n    checked: filters.a,\n    onChange: () => setFilters(!filters.a),\n    name: \"A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), __jsx(Checkbox, {\n    checked: filters.b,\n    onChange: () => setFilters(!filters.b),\n    name: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), __jsx(Checkbox, {\n    checked: filters.c,\n    onChange: () => setFilters(!filters.c),\n    name: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }))), __jsx(Box, {\n    className: classes.filter,\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => setOpenFilter(2),\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Specialty: All\", __jsx(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 103\n    }\n  }, \"expand_more\")), openFilter === 2 && __jsx(Box, {\n    className: classes.popover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 34\n    }\n  }, \"Filter 2\")), __jsx(Box, {\n    className: classes.filter,\n    display: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => setOpenFilter(3),\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Treatment: All\", __jsx(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 103\n    }\n  }, \"expand_more\")), openFilter === 3 && __jsx(Box, {\n    className: classes.popover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 34\n    }\n  }, \"Filter 3\")));\n};\n\nexport default FilterBar;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/FilterBar.js"],"names":["useState","useEffect","makeStyles","Container","Box","Button","Grid","Icon","Typography","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","useStyles","theme","root","width","height","background","padding","filter","marginRight","position","popover","bottom","zIndex","overflow","borderRadius","boxShadow","border","borderWidth","marginLeft","left","content","pointerEvents","borderBottomColor","FilterBar","props","classes","openFilter","setOpenFilter","filters","setFilters","A","B","C","D","a","b","c"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Icon from '@material-ui/core/Icon';\nimport Typography from '@material-ui/core/Typography'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height:70,\n    background: \"transparent\",\n    padding:15,\n  },\n  filter: {\n    marginRight:15,\n    position:'relative',\n    height:'auto',\n  },\n  popover: {\n    position:'absolute',\n    bottom:-115,\n    width:300,\n    height:100,\n    zIndex:2000,\n    background:\"#fff\",\n    overflow:'visible',\n    borderRadius:12,\n    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    border:'1px solid #eee',\n\n    '&::after': {\n    \tborderWidth: 10,\n    \tmarginLeft: -30,\n      bottom: '100%',\n\t    left: 60,\n      content:  '\" \"',\n\t    height: 0,\n\t    width: 0,\n\t    position: 'absolute',\n\t    pointerEvents: 'none',\n\t    borderBottomColor: '#fff',\n      border: 'solid transparent',\n    },\n\n    '&::before': {\n    \tborderWidth: 12,\n    \tmarginLeft: -30,\n      bottom: '100%',\n\t    left: 58,\n      content:  '\" \"',\n\t    height: 0,\n\t    width: 0,\n\t    position: 'absolute',\n\t    pointerEvents: 'none',\n\t    borderBottomColor: '#eee',\n      border: 'solid transparent',\n    }\n\n  },\n\n}));\n\nconst FilterBar = props => {\n  const classes = useStyles()\n  const [openFilter, setOpenFilter] = useState(null)\n  const [filters, setFilters] = useState({\n    A: false,\n    B: false,\n    C: false,\n    D: false,\n  })\n\n  return (\n      <Box className={classes.root} p={1}>\n        <Box className={classes.filter} display=\"inline-block\">\n          <Button onClick={() => setOpenFilter(1)} variant=\"outlined\" color=\"secondary\">Client Type: All<Icon>expand_more</Icon></Button>\n          {(openFilter === 1) &&\n            <Box className={classes.popover}>\n              <Checkbox checked={filters.a} onChange={() => setFilters(!filters.a)} name=\"A\" />\n              <Checkbox checked={filters.b} onChange={() => setFilters(!filters.b)} name=\"B\" />\n              <Checkbox checked={filters.c} onChange={() => setFilters(!filters.c)} name=\"C\" />\n            </Box>\n          }\n        </Box>\n        <Box className={classes.filter} display=\"inline-block\">\n          <Button onClick={() => setOpenFilter(2)} variant=\"outlined\" color=\"secondary\">Specialty: All<Icon>expand_more</Icon></Button>\n          {(openFilter === 2) && <Box className={classes.popover}>Filter 2</Box> }\n        </Box>\n        <Box className={classes.filter} display=\"inline-block\">\n          <Button onClick={() => setOpenFilter(3)} variant=\"outlined\" color=\"secondary\">Treatment: All<Icon>expand_more</Icon></Button>\n          {(openFilter === 3) && <Box className={classes.popover}>Filter 3</Box> }\n        </Box>\n      </Box>\n  )\n}\n\nexport default FilterBar\n"]},"metadata":{},"sourceType":"module"}