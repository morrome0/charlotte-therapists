{"ast":null,"code":"var _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Map.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react';\nvar mapStyles = {\n  width: 'calc(100vw - 600px)',\n  height: '90vh'\n};\nvar containerStyle = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\nfunction MapInstance(props) {\n  var _this = this;\n\n  var _useState = useState(true),\n      showingInfoWindow = _useState[0],\n      setShowingInfoWindow = _useState[1];\n\n  return __jsx(Map, {\n    google: props.google,\n    zoom: 12,\n    style: mapStyles,\n    containerStyle: containerStyle,\n    initialCenter: {\n      lat: 35.2271,\n      lng: -80.8431\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.therapists.map(function (therapist) {\n    if (therapist.location) {\n      return __jsx(Marker, {\n        key: therapist.id,\n        name: therapist.name,\n        position: {\n          lat: therapist.location.lat,\n          lng: therapist.location.lng\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      });\n    }\n  }));\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.GOOGLE_MAPS_API_KEY\n})(MapInstance); //To-Do Secure API Key","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Map.js"],"names":["React","useState","Map","Marker","InfoWindow","GoogleApiWrapper","mapStyles","width","height","containerStyle","position","MapInstance","props","showingInfoWindow","setShowingInfoWindow","google","lat","lng","therapists","map","therapist","location","id","name","apiKey","process","env","GOOGLE_MAPS_API_KEY"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,gBAAlC,QAA0D,mBAA1D;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,qBADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;AAKA,IAAMC,cAAc,GAAG;AACrBF,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE,MAFa;AAGrBE,EAAAA,QAAQ,EAAE;AAHW,CAAvB;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,kBACyBX,QAAQ,CAAC,IAAD,CADjC;AAAA,MAClBY,iBADkB;AAAA,MACCC,oBADD;;AAG1B,SACE,MAAC,GAAD;AACE,IAAA,MAAM,EAAEF,KAAK,CAACG,MADhB;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAET,SAHT;AAIE,IAAA,cAAc,EAAEG,cAJlB;AAKE,IAAA,aAAa,EAAE;AAAEO,MAAAA,GAAG,EAAE,OAAP;AAAgBC,MAAAA,GAAG,EAAE,CAAC;AAAtB,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGL,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAqB,UAAAC,SAAS,EAC7B;AAAE,QAAIA,SAAS,CAACC,QAAd,EAAwB;AACxB,aACE,MAAC,MAAD;AACA,QAAA,GAAG,EAAED,SAAS,CAACE,EADf;AAEA,QAAA,IAAI,EAAEF,SAAS,CAACG,IAFhB;AAGA,QAAA,QAAQ,EAAE;AAAEP,UAAAA,GAAG,EAAEI,SAAS,CAACC,QAAV,CAAmBL,GAA1B;AAA+BC,UAAAA,GAAG,EAAEG,SAAS,CAACC,QAAV,CAAmBJ;AAAvD,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;AAAC,GARH,CAPH,CADF;AAqBD;;AAED,eAAeZ,gBAAgB,CAAC;AAC9BmB,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADU,CAAD,CAAhB,CAEZhB,WAFY,CAAf,C,CAIA","sourcesContent":["import React, { useState } from 'react'\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from 'google-maps-react'\n\n\nconst mapStyles = {\n  width: 'calc(100vw - 600px)',\n  height: '90vh',\n};\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n}\n\nfunction MapInstance(props) {\n  const  [showingInfoWindow, setShowingInfoWindow] = useState(true)\n\n  return (\n    <Map\n      google={props.google}\n      zoom={12}\n      style={mapStyles}\n      containerStyle={containerStyle}\n      initialCenter={{ lat: 35.2271, lng: -80.8431}}>\n\n      {props.therapists.map(therapist =>\n        { if (therapist.location) {\n          return (\n            <Marker\n            key={therapist.id}\n            name={therapist.name}\n            position={{ lat: therapist.location.lat, lng: therapist.location.lng }} />\n          )\n        }}\n      )}\n\n    </Map>\n  )\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.GOOGLE_MAPS_API_KEY\n})(MapInstance);\n\n//To-Do Secure API Key\n"]},"metadata":{},"sourceType":"module"}