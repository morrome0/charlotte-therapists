{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/miller/Code/charlotte-therapists/components/Map.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Marker from './Marker';\nvar useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  }\n});\n\nvar Map = function Map(props) {\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      map = _useState[0],\n      setMap = _useState[1];\n\n  var _useState2 = useState({}),\n      markers = _useState2[0],\n      setMarkers = _useState2[1];\n\n  var mapRef = useRef(null);\n\n  var initMap = function initMap() {\n    var map = new google.maps.Map(mapRef.current, {\n      center: {\n        lat: 35.2271,\n        lng: -80.8431\n      },\n      zoom: 12\n    });\n    setMap(map);\n    var markers = [];\n    props.therapists.forEach(function (therapist) {\n      if (therapist.location) {\n        var marker = new google.maps.Marker({\n          position: therapist.location,\n          map: map\n        });\n        markers.push(marker);\n      }\n    });\n    setMarkers(markers);\n  };\n\n  useEffect(function () {\n    initMap();\n    console.log(markers);\n    return function () {};\n  }, []); // const selectMarkers = () => {\n  //   markers[0].setAnimation(google.maps.Animation.BOUNCE)\n  // }\n  //\n  // useEffect(() => {\n  //   selectMarkers()\n  //   return () => {\n  //   }\n  // }, [props.selected])\n\n  return __jsx(\"div\", {\n    ref: mapRef,\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Marker, {\n    map: map,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/miller/Code/charlotte-therapists/components/Map.js"],"names":["React","useEffect","useRef","useState","makeStyles","Marker","useStyles","root","display","height","width","Map","props","classes","map","setMap","markers","setMarkers","mapRef","initMap","google","maps","current","center","lat","lng","zoom","therapists","forEach","therapist","location","marker","position","push","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AAC3BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,cADL;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,KAAK,EAAE;AAHH;AADqB,CAAD,CAA5B;;AAQA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AACnB,MAAMC,OAAO,GAAGP,SAAS,EAAzB;;AADmB,kBAEKH,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEXW,GAFW;AAAA,MAENC,MAFM;;AAAA,mBAGaZ,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGXa,OAHW;AAAA,MAGFC,UAHE;;AAInB,MAAMC,MAAM,GAAGhB,MAAM,CAAC,IAAD,CAArB;;AAEA,MAAMiB,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAML,GAAG,GAAG,IAAIM,MAAM,CAACC,IAAP,CAAYV,GAAhB,CAAoBO,MAAM,CAACI,OAA3B,EAAoC;AAC9CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,OAAP;AAAgBC,QAAAA,GAAG,EAAE,CAAC;AAAtB,OADsC;AAE9CC,MAAAA,IAAI,EAAE;AAFwC,KAApC,CAAZ;AAIAX,IAAAA,MAAM,CAACD,GAAD,CAAN;AAEA,QAAME,OAAO,GAAG,EAAhB;AACAJ,IAAAA,KAAK,CAACe,UAAN,CAAiBC,OAAjB,CAAyB,UAACC,SAAD,EAAe;AACtC,UAAIA,SAAS,CAACC,QAAd,EAAwB;AACtB,YAAIC,MAAM,GAAG,IAAIX,MAAM,CAACC,IAAP,CAAYhB,MAAhB,CAAuB;AAAC2B,UAAAA,QAAQ,EAAEH,SAAS,CAACC,QAArB;AAAgChB,UAAAA,GAAG,EAAEA;AAArC,SAAvB,CAAb;AACAE,QAAAA,OAAO,CAACiB,IAAR,CAAaF,MAAb;AACD;AACF,KALD;AAMAd,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAfD;;AAiBAf,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,OAAO;AACPe,IAAAA,OAAO,CAACC,GAAR,CAAYnB,OAAZ;AACA,WAAO,YAAM,CACZ,CADD;AAED,GALQ,EAKN,EALM,CAAT,CAvBmB,CAgCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAkB,IAAA,SAAS,EAAEL,OAAO,CAACN,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAGO,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA/CD;;AAiDA,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Marker from './Marker'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'inline-block',\n    height: '90vh',\n    width: 'calc(100vw - 600px)'\n  },\n});\n\nconst Map = props => {\n  const classes = useStyles()\n  const [ map, setMap ] = useState({})\n  const [ markers, setMarkers ] = useState({})\n  const mapRef = useRef(null)\n\n  const initMap = () => {\n    const map = new google.maps.Map(mapRef.current, {\n      center: { lat: 35.2271, lng: -80.8431 },\n      zoom: 12\n    });\n    setMap(map)\n\n    const markers = []\n    props.therapists.forEach((therapist) => {\n      if (therapist.location) {\n        let marker = new google.maps.Marker({position: therapist.location , map: map})\n        markers.push(marker)\n      }\n    })\n    setMarkers(markers)\n  }\n\n  useEffect(() => {\n    initMap()\n    console.log(markers)\n    return () => {\n    }\n  }, [])\n\n  \n\n  // const selectMarkers = () => {\n  //   markers[0].setAnimation(google.maps.Animation.BOUNCE)\n  // }\n  //\n  // useEffect(() => {\n  //   selectMarkers()\n  //   return () => {\n  //   }\n  // }, [props.selected])\n\n  return (\n    <div ref={mapRef} className={classes.root}>\n      <Marker map= {map}/>\n    </div>\n  )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}